{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA,uDAA4C;AAGrC,IAAM,aAAa,GAAnB,MAAM,aAAa;CAAG;AAAhB,aAAa;IADzB,uBAAU,GAAE;GACA,aAAa,CAAG;AAAhB,sCAAa;;;;;;;;;;;;ACH1B,uDAA6C;AAChC,qBAAa,GAAG,UAAU,CAAC;AACjC,MAAM,MAAM,GAAG,GAAG,EAAE,CAAC,wBAAW,EAAC,qBAAa,EAAE,IAAI,CAAC,CAAC;AAAhD,cAAM,UAA0C;AAE7D,uDAAwC;AACxC,2DAAkD;AAClD,2FAAgD;AAChD,4FAAiD;AACjD,sFAA2C;AAC3C,gHAAqE;AACrE,oGAAyD;AACzD,8FAAmD;AACnD,mDAAyC;AACzC,iGAAqD;AACrD,2FAAgD;AAChD,iGAAsD;AACtD,uGAA4D;AAiBrD,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG;AAAZ,SAAS;IAfrB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,yBAAc,CAAC,OAAO,CAAC,kCAAkC,CAAC,EAAE,sCAAiB,EAAE,8BAAa,EAAE,wBAAU,EAAE,0BAAW,EAAE,4BAAY,EAAE,gCAAc,CAAC;QAC9J,WAAW,EAAE,CAAC,8BAAa,CAAC;QAC5B,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,gBAAS;gBAClB,QAAQ,EAAE,6BAAY;aACvB;YACD;gBACE,OAAO,EAAE,gBAAS;gBAClB,QAAQ,EAAE,wBAAU;aACrB;YACD,wBAAU;SACX;KACF,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;;;ACjCtB,uDAA4C;AAGrC,IAAM,UAAU,GAAhB,MAAM,UAAU;IACrB,OAAO;QACL,OAAO,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;IAC/C,CAAC;CACF;AAJY,UAAU;IADtB,uBAAU,GAAE;GACA,UAAU,CAItB;AAJY,gCAAU;;;;;;;;;;;;;ACHvB,uDAAiF;AACjF,oFAAuC;AACvC,6FAA6C;AAC7C,qGAAoD;AACpD,oGAAyD;AAGlD,IAAM,cAAc,GAApB,MAAM,cAAc;IACvB,YAA8B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAKpD,KAAK,CAAY,GAAG;;YACtB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC;KAAA;IAIK,QAAQ,CAAS,IAAmB;;YACtC,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;KAAA;IAGD,UAAU,CAAY,GAAG;QACrB,OAAO,GAAG,CAAC,IAAI,CAAC;IACpB,CAAC;CACJ;AAdS;IAHL,uBAAM,GAAE;IACR,sBAAS,EAAC,iCAAc,CAAC;IACzB,iBAAI,EAAC,OAAO,CAAC;IACD,uCAAO,GAAE;;;;2CAErB;AAIK;IAFL,uBAAM,GAAE;IACR,iBAAI,EAAC,UAAU,CAAC;IACD,oCAAI,GAAE;;iEAAO,+BAAa,oBAAb,+BAAa;;8CAEzC;AAED;IAAC,gBAAG,EAAC,SAAS,CAAC;IACH,uCAAO,GAAE;;;;gDAEpB;AAnBQ,cAAc;IAD1B,uBAAU,EAAC,MAAM,CAAC;iEAE4B,0BAAW,oBAAX,0BAAW;GAD7C,cAAc,CAoB1B;AApBY,wCAAc;;;;;;;;;;;;ACP3B,uDAAwC;AACxC,6FAA6C;AAC7C,iGAAiD;AACjD,6FAA6C;AAC7C,8FAAoD;AACpD,2DAAkD;AAClD,iDAAwC;AACxC,qFAA0C;AAC1C,mGAAmD;AAe5C,IAAM,UAAU,GAAhB,MAAM,UAAU;CAAG;AAAb,UAAU;IAbtB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,0BAAW;YACX,yBAAc;YACd,eAAS,CAAC,QAAQ,CAAC;gBACjB,MAAM,EAAE,uBAAY,CAAC,MAAM;gBAC3B,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;aACjC,CAAC;SACH;QACD,SAAS,EAAE,CAAC,0BAAW,EAAE,8BAAa,EAAE,0BAAW,CAAC;QACpD,OAAO,EAAE,CAAC,0BAAW,CAAC;QACtB,WAAW,EAAE,CAAC,gCAAc,CAAC;KAC9B,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;;;ACvBvB,uDAAuE;AACvE,gGAAsD;AACtD,iDAAyC;AACzC,6CAAiC;AAI1B,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,YACU,YAA0B,EAC1B,UAAsB;QADtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,eAAU,GAAV,UAAU,CAAY;IAC7B,CAAC;IAEE,YAAY,CAAC,QAAgB,EAAE,IAAY;;YAC/C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAEjE,IAAI,IAAI,EAAE;gBACR,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEzD,IAAI,MAAM,EAAE;oBACV,MAAM,EAAE,QAAQ,KAAgB,IAAI,EAAf,MAAM,kBAAK,IAAI,EAA9B,YAAuB,CAAO,CAAC;oBACrC,OAAO,MAAM,CAAC;iBACf;aACF;YAED,MAAM,IAAI,sBAAa,CAAC,oCAAoC,EAAE,mBAAU,CAAC,WAAW,CAAC,CAAC;QACxF,CAAC;KAAA;IAEK,KAAK,CAAC,IAAS;;YACnB,MAAM,OAAO,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YAC9D,OAAO;gBACL,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;aAC5C,CAAC;QACJ,CAAC;KAAA;IAEK,QAAQ,CAAC,IAAmB;;YAChC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACjJ,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC;KAAA;CACF;AAhCY,WAAW;IADvB,uBAAU,GAAE;iEAGa,4BAAY,oBAAZ,4BAAY,oDACd,gBAAU,oBAAV,gBAAU;GAHrB,WAAW,CAgCvB;AAhCY,kCAAW;;;;;;;;;;;ACPX,oBAAY,GAAG;IACxB,MAAM,EAAE,WAAW;CACtB,CAAC;;;;;;;;;;;;;ACFF,uDAA8D;AAC9D,mDAAyC;AACzC,2DAA6C;AAC7C,oFAA8C;AAGvC,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,wBAAS,EAAC,KAAK,CAAC;IAChD,YAAoB,SAAoB;QACtC,KAAK,EAAE,CAAC;QADU,cAAS,GAAT,SAAS,CAAW;IAExC,CAAC;IAED,WAAW,CAAC,OAAyB;QACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAU,0BAAa,EAAE;YACxE,OAAO,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,QAAQ,EAAE;SACnB,CAAC,CAAC;QACH,IAAI,QAAQ,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;CACF;AAfY,YAAY;IADxB,uBAAU,GAAE;iEAEoB,gBAAS,oBAAT,gBAAS;GAD7B,YAAY,CAexB;AAfY,oCAAY;;;;;;;;;;;;;ACNzB,2DAAoD;AACpD,2DAAoD;AACpD,uDAAuE;AACvE,qFAA0C;AAC1C,gGAAsD;AAG/C,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,+BAAgB,EAAC,uBAAQ,CAAC;IACzD,YAAoB,YAA0B;QAC5C,KAAK,CAAC;YACJ,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,uBAAY,CAAC,MAAM;SACjC,CAAC,CAAC;QALe,iBAAY,GAAZ,YAAY,CAAc;IAM9C,CAAC;IAEK,QAAQ,CAAC,OAAY;;YACzB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEzE,IAAI,IAAI,EAAE;gBACR,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aACrE;iBAAM;gBACL,MAAM,IAAI,sBAAa,CAAC,mBAAmB,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACvE;QACH,CAAC;KAAA;CACF;AAlBY,WAAW;IADvB,uBAAU,GAAE;iEAEuB,4BAAY,oBAAZ,4BAAY;GADnC,WAAW,CAkBvB;AAlBY,kCAAW;;;;;;;;;;;;ACPxB,uDAA4C;AAC5C,2DAA6C;AAGtC,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,wBAAS,EAAC,OAAO,CAAC;CAAG;AAA5C,cAAc;IAD1B,uBAAU,GAAE;GACA,cAAc,CAA8B;AAA5C,wCAAc;;;;;;;;;;;;;ACJ3B,+DAA0C;AAC1C,2DAAoD;AACpD,uDAAmE;AACnE,6FAA6C;AAGtC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,+BAAgB,EAAC,yBAAQ,CAAC;IAC3D,YAAoB,WAAwB;QAC1C,KAAK,EAAE,CAAC;QADU,gBAAW,GAAX,WAAW,CAAa;IAE5C,CAAC;IAEK,QAAQ,CAAC,QAAgB,EAAE,QAAgB;;YAC/C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,IAAI,8BAAqB,EAAE,CAAC;aACnC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;CACF;AAZY,aAAa;IADzB,uBAAU,GAAE;iEAEsB,0BAAW,oBAAX,0BAAW;GADjC,aAAa,CAYzB;AAZY,sCAAa;;;;;;;;;;;ACN1B,uDAA6C;AAGhC,iBAAS,GAAG,OAAO,CAAC;AAC1B,MAAM,KAAK,GAAG,CAAC,GAAG,KAAa,EAAE,EAAE,CAAC,wBAAW,EAAC,iBAAS,EAAE,KAAK,CAAC,CAAC;AAA5D,aAAK,SAAuD;;;;;;;;;;;;;ACJzE,uDAA2E;AAC3E,mDAAyC;AAEzC,mGAA8C;AAGvC,IAAM,UAAU,GAAhB,MAAM,UAAU;IACrB,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE5C,WAAW,CAAC,OAAyB;QACnC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAS,2BAAS,EAAE;YACxE,OAAO,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,QAAQ,EAAE;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,IAAI,CAAC;SACb;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACrD,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,WAAC,iBAAI,CAAC,KAAK,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAC,CAAC;IAClE,CAAC;CACF;AAdY,UAAU;IADtB,uBAAU,GAAE;iEAEoB,gBAAS,oBAAT,gBAAS;GAD7B,UAAU,CActB;AAdY,gCAAU;;;;;;;;;;;;;ACNvB,uDAAwF;AACxF,kHAA2D;AAC3D,oHAA4D;AAE5D,oHAA4D;AAC5D,yGAA8D;AAGvD,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAChC,YAA6B,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;IAAG,CAAC;IAG/D,cAAc;;YAClB,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;QACtD,CAAC;KAAA;IAGK,gBAAgB,CAA4B,EAAU;;YAC1D,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAC1D,CAAC;KAAA;IAGK,eAAe,CAAQ,GAAG,EAAU,kBAAsC;;YAC9E,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;QAC9E,CAAC;KAAA;IAGK,aAAa,CAAQ,GAAG,EAA6B,EAAU;;YACnE,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5D,CAAC;KAAA;IAGK,cAAc,CAAQ,GAAG,EAA6B,EAAU;;YACpE,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC7D,CAAC;KAAA;IAGK,eAAe,CAAQ,GAAG,EAA6B,EAAU,EAAU,kBAAsC;;YACrH,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;QAClF,CAAC;KAAA;IAGK,eAAe,CAAQ,GAAG,EAA6B,EAAU;;YACrE,OAAO,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC9D,CAAC;KAAA;CACF;AAjCO;IADL,gBAAG,GAAE;;;gEACkB,OAAO,oBAAP,OAAO;2DAE9B;AAGK;IADL,gBAAG,EAAC,KAAK,CAAC;IACa,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;6DAErE;AAGK;IADL,iBAAI,GAAE;IACgB,mCAAG,GAAE;IAAO,oCAAI,GAAE;;yEAAqB,yCAAkB,oBAAlB,yCAAkB;gEAAG,OAAO,oBAAP,OAAO;4DAEzF;AAGK;IADL,iBAAI,EAAC,UAAU,CAAC;IACI,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;0DAE9E;AAGK;IADL,iBAAI,EAAC,WAAW,CAAC;IACI,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;2DAE/E;AAGK;IADL,kBAAK,EAAC,KAAK,CAAC;IACU,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;IAAc,oCAAI,GAAE;;iFAAqB,yCAAkB,oBAAlB,yCAAkB;gEAAG,OAAO,oBAAP,OAAO;4DAEhI;AAGK;IADL,mBAAM,EAAC,KAAK,CAAC;IACS,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;4DAEhF;AApCU,qBAAqB;IADjC,uBAAU,EAAC,WAAW,CAAC;iEAEyB,wCAAkB,oBAAlB,wCAAkB;GADtD,qBAAqB,CAqCjC;AArCY,sDAAqB;;;;;;;;;;;;ACRlC,2DAAkD;AAClD,uDAAoD;AACpD,4GAAgE;AAChE,wHAAiE;AACjE,kHAA2D;AAC3D,iGAAuD;AACvD,8FAAoD;AAS7C,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;CAAG;AAApB,iBAAiB;IAP7B,mBAAM,EAAC;QACJ,OAAO,EAAE,CAAC,yBAAc,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,4BAAS,CAAC,IAAI,EAAE,MAAM,EAAE,kCAAe,EAAE,CAAC,CAAC,EAAE,4BAAY,EAAE,uBAAU,EAAC,GAAG,EAAE,CAAC,0BAAW,CAAC,CAAC;QACtI,WAAW,EAAE,CAAC,8CAAqB,CAAC;QACpC,SAAS,EAAE,CAAC,wCAAkB,CAAC;QAC/B,OAAO,EAAE,CAAC,yBAAc,EAAE,wCAAkB,CAAC;KAChD,CAAC;GAEW,iBAAiB,CAAG;AAApB,8CAAiB;;;;;;;;;;;;;ACf9B,uDAA2F;AAC3F,4GAAkE;AAClE,mDAAwC;AACxC,mGAAyD;AACzD,gGAAsD;AAItD,2DAA+C;AAC/C,uHAA6E;AAC7E,yGAA8D;AAC9D,wFAA0C;AAGnC,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC3B,YAAiD,cAAwC,EAAmB,aAA6B,EAA2D,YAA2B;QAA9K,mBAAc,GAAd,cAAc,CAA0B;QAAmB,kBAAa,GAAb,aAAa,CAAgB;QAA2D,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IAE7N,gBAAgB,CAAC,EAAU;;YAC7B,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxE,CAAC;KAAA;IAEK,cAAc;;YAChB,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC;KAAA;IAEK,eAAe,CAAC,GAAG,EAAE,kBAAsC;;YAC7D,IAAI,kBAAkB,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAkB,CAAC,CAAC,EAAE;oBACxE,MAAM,IAAI,0CAAmB,CAAC,CAAC,iDAAiD,CAAC,CAAC;iBACrF;aACJ;YAED,MAAM,WAAW,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAE7H,MAAM,eAAe,GAAG,IAAI,IAAI,CAAC,cAAc,iCACxC,kBAAkB,KACrB,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,EAAE,EACzB,YAAY,EAAE,IAAI,IAAI,EAAE,EACxB,OAAO,EAAE,CAAC,EACV,MAAM,EAAE,WAAW,EACnB,KAAK,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IACzD,CAAC;YAEH,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvD,CAAC;KAAA;IAEK,aAAa,CAAC,GAAG,EAAE,EAAU;;YAC/B,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACjE,MAAM,IAAI,0CAAmB,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC;aAC/E;YAED,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7F,MAAM,IAAI,0CAAmB,CAAC,CAAC,iCAAiC,CAAC,CAAC,CAAC;aACtE;YAED,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;QACjK,CAAC;KAAA;IAEK,cAAc,CAAC,GAAG,EAAE,EAAU;;YAChC,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACjE,MAAM,IAAI,0CAAmB,CAAC,CAAC,2CAA2C,CAAC,CAAC,CAAC;aAChF;YAED,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/F,MAAM,IAAI,0CAAmB,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;aAClE;YAED,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;QACjK,CAAC;KAAA;IAEK,eAAe,CAAC,GAAG,EAAE,EAAU,EAAE,kBAAsC;;YACzE,IAAI,kBAAkB,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAkB,CAAC,CAAC,EAAE;oBACxE,MAAM,IAAI,0CAAmB,CAAC,CAAC,iDAAiD,CAAC,CAAC;iBACrF;aACJ;YAED,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACxG,IAAI,aAAa,GAAG,EAAE,CAAC;gBAEvB,IAAI,kBAAkB,CAAC,MAAM,EAAE;oBAC3B,MAAM,MAAM,GAAa,EAAE,CAAC;oBAE5B,KAAK,MAAM,KAAK,IAAI,kBAAkB,CAAC,MAAM,EAAE;wBAC3C,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;qBAC7D;oBAED,OAAO,kBAAkB,CAAC,MAAM,CAAC;oBAEjC,aAAa,GAAG,EAAE,MAAM,EAAE,CAAC;iBAC9B;gBAED,aAAa,mCAAQ,kBAAkB,GAAK,aAAa,CAAE,CAAC;gBAE5D,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;aAC/F;iBAAM;gBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACpE;QACL,CAAC;KAAA;IAEK,eAAe,CAAC,GAAG,EAAE,EAAU;;YACjC,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACxG,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aAChF;iBAAM;gBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACpE;QACL,CAAC;KAAA;IAEK,iBAAiB,CAAC,KAAe;;YACnC,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,6BAAY,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;QACjE,CAAC;KAAA;IAEK,QAAQ,CAAC,WAAmB;;YAC9B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE9F,IAAI,CAAC,SAAS,EAAE;gBACZ,MAAM,IAAI,0CAAmB,CAAC,CAAC,qBAAqB,WAAW,kBAAkB,CAAC,CAAC;aACtF;QACL,CAAC;KAAA;CACJ;AAlHY,kBAAkB;IAD9B,uBAAU,GAAE;IAEI,6CAAW,EAAC,4BAAS,CAAC,IAAI,CAAC;IAAoG,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,4BAAY,CAAC,CAAC;iEAAjH,gBAAK,oBAAL,gBAAK,oDAAsD,8BAAa,oBAAb,8BAAa,oDAA0E,4BAAY,oBAAZ,4BAAY;GADtN,kBAAkB,CAkH9B;AAlHY,gDAAkB;;;;;;;;;;;;;ACd/B,2DAA+D;AAC/D,mDAA2C;AAG3C,4FAA4C;AAKrC,IAAM,SAAS,GAAf,MAAM,SAAS;CAwCrB;AAvCG;IAAC,mBAAI,GAAE;0DACF,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;sCAAC;AAEpB;IAAC,mBAAI,GAAE;;uCACM;AAEb;IAAC,mBAAI,GAAE;;8CACa;AAEpB;IAAC,mBAAI,GAAE;0DACE,MAAM,oBAAN,MAAM;0CAAC;AAEhB;IAAC,mBAAI,GAAE;0DACO,IAAI,oBAAJ,IAAI;+CAAC;AAEnB;IAAC,mBAAI,GAAE;;wCACO;AAEd;IAAC,mBAAI,GAAE;;yCACS;AAEhB;IAAC,mBAAI,EAAC;QACF,OAAO,EAAE,EAAE;KACd,CAAC;;yCACa;AAEf;IAAC,mBAAI,EAAC;QACF,OAAO,EAAE,EAAE;KACd,CAAC;;0CACe;AAEjB;IAAC,mBAAI,EAAC;QACF,OAAO,EAAE,EAAE;QACX,GAAG,EAAE,MAAM;KACd,CAAC;;0CACuB;AAEzB;IAAC,mBAAI,GAAE;0DACA,kBAAI,oBAAJ,kBAAI;wCAAA;AAvCF,SAAS;IADrB,qBAAM,GAAE;GACI,SAAS,CAwCrB;AAxCY,8BAAS;AA0CT,uBAAe,GAAG,wBAAa,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;ACnDvE,iEAKyB;AAEzB,MAAa,kBAAkB;CAwB9B;AAvBG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;gDACC;AAEb;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;uDACQ;AAEpB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;iDACE;AAEd;IAAC,+BAAS,GAAE;IACX,gCAAU,GAAE;IACZ,+BAAS,GAAE;;kDACI;AAEhB;IAAC,gCAAU,GAAE;IACZ,+BAAS,GAAE;;kDACI;AAvBpB,gDAwBC;;;;;;;;;;;;AC/BD,iEAIyB;AAGzB,MAAa,kBAAkB;CAsB9B;AArBG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;gDACA;AAEb;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;uDACO;AAEpB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;iDACC;AAEd;IAAC,+BAAS,GAAE;IACX,gCAAU,GAAE;;kDACG;AAEhB;IAAC,gCAAU,GAAE;;kDACI;AAEjB;IAAC,gCAAU,GAAE;;mDACK;AArBtB,gDAsBC;;;;;;;;;;;;AC7BD,iEAEyB;AAEzB,MAAa,gBAAgB;CAG5B;AAFG;IAAC,8BAAQ,GAAE;;iDACK;AAFpB,4CAGC;;;;;;;;;;;;;ACPD,2DAA+D;AAC/D,mDAA2C;AAKpC,IAAM,OAAO,GAAb,MAAM,OAAO;CAsBnB;AArBG;IAAC,mBAAI,GAAE;0DACF,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;oCAAC;AAEpB;IAAC,mBAAI,EAAC;QACF,GAAG,EAAE,MAAM;KACd,CAAC;0DACO,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;wCAAC;AAExB;IAAC,mBAAI,GAAE;;wCACS;AAEhB;IAAC,mBAAI,EAAC;QACF,GAAG,EAAE,MAAM;KACd,CAAC;;sCACsB;AAExB;IAAC,mBAAI,GAAE;0DACO,IAAI,oBAAJ,IAAI;6CAAC;AAEnB;IAAC,mBAAI,GAAE;;yCACW;AArBT,OAAO;IADnB,qBAAM,GAAE;GACI,OAAO,CAsBnB;AAtBY,0BAAO;AAwBP,qBAAa,GAAG,wBAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;AC9BnE,uDAAwF;AACxF,yGAA8D;AAC9D,6GAAwD;AAExD,yGAAqD;AACrD,6GAAwD;AAGjD,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC3B,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAG3D,WAAW,CACuB,WAAmB,EACtB,QAAgB;;YACjD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACzE,CAAC;KAAA;IAGK,cAAc,CACoB,WAAmB,EACtB,QAAgB,EACf,SAAiB;;YACnD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QACvF,CAAC;KAAA;IAGK,aAAa,CACR,GAAG,EAC0B,WAAmB,EACtB,QAAgB,EACzC,gBAAkC;;YAC1C,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAClG,CAAC;KAAA;IAGK,WAAW,CACN,GAAG,EAC0B,WAAmB,EACtB,QAAgB,EACf,SAAiB;;YACnD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QACzF,CAAC;KAAA;IAGK,aAAa,CACR,GAAG,EAC0B,WAAmB,EACtB,QAAgB,EACf,SAAiB,EAC3C,gBAAkC;;YAC1C,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;QAC7G,CAAC;KAAA;IAGK,aAAa,CACR,GAAG,EAC0B,WAAmB,EACtB,QAAgB,EACf,SAAiB;;YACnD,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC3F,CAAC;KAAA;CACJ;AAlDS;IADL,gBAAG,EAAC,uCAAuC,CAAC;IAExC,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAClC,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;;;gEAAoB,OAAO,oBAAP,OAAO;qDAE9D;AAGK;IADL,gBAAG,EAAC,kDAAkD,CAAC;IAEnD,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAClC,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;IAC/B,qCAAK,EAAC,WAAW,EAAE,6BAAY,CAAC;;;gEAAqB,OAAO,oBAAP,OAAO;wDAEhE;AAGK;IADL,iBAAI,EAAC,uCAAuC,CAAC;IAEzC,mCAAG,GAAE;IACL,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAClC,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;IAC/B,oCAAI,GAAE;;yFAAmB,qCAAgB,oBAAhB,qCAAgB;gEAAG,OAAO,oBAAP,OAAO;uDAEvD;AAGK;IADL,iBAAI,EAAC,uDAAuD,CAAC;IAEzD,mCAAG,GAAE;IACL,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAClC,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;IAC/B,qCAAK,EAAC,WAAW,EAAE,6BAAY,CAAC;;;gEAAqB,OAAO,oBAAP,OAAO;qDAEhE;AAGK;IADL,kBAAK,EAAC,kDAAkD,CAAC;IAErD,mCAAG,GAAE;IACL,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAClC,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;IAC/B,qCAAK,EAAC,WAAW,EAAE,6BAAY,CAAC;IAChC,oCAAI,GAAE;;iGAAmB,qCAAgB,oBAAhB,qCAAgB;gEAAG,OAAO,oBAAP,OAAO;uDAEvD;AAGK;IADL,mBAAM,EAAC,kDAAkD,CAAC;IAEtD,mCAAG,GAAE;IACL,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAClC,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;IAC/B,qCAAK,EAAC,WAAW,EAAE,6BAAY,CAAC;;;;uDAEpC;AArDQ,kBAAkB;IAD9B,uBAAU,EAAC,WAAW,CAAC;iEAE0B,kCAAe,oBAAf,kCAAe;GADpD,kBAAkB,CAsD9B;AAtDY,gDAAkB;;;;;;;;;;;;ACR/B,uDAAwC;AACxC,2DAAkD;AAClD,gHAAsE;AACtE,qGAA0D;AAC1D,+GAA2D;AAC3D,yGAAqD;AAQ9C,IAAM,cAAc,GAApB,MAAM,cAAc;CAAG;AAAjB,cAAc;IAN1B,mBAAM,EAAC;QACJ,OAAO,EAAE,CAAC,yBAAc,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,wBAAO,CAAC,IAAI,EAAE,MAAM,EAAE,8BAAa,EAAE,CAAC,CAAC,EAAE,sCAAiB,CAAC;QACxG,WAAW,EAAE,CAAC,wCAAkB,CAAC;QACjC,SAAS,EAAE,CAAC,kCAAe,CAAC;KAC/B,CAAC;GAEW,cAAc,CAAG;AAAjB,wCAAc;;;;;;;;;;;;;ACb3B,uDAAuE;AACvE,2DAA+C;AAC/C,mDAAwC;AACxC,4GAA+E;AAC/E,uHAA6E;AAC7E,wFAA0C;AAE1C,qGAA4D;AAGrD,IAAM,eAAe,GAArB,MAAM,eAAe;IACxB,YAAiD,cAAwC,EAAqC,YAAoC;QAAjH,mBAAc,GAAd,cAAc,CAA0B;QAAqC,iBAAY,GAAZ,YAAY,CAAwB;IAAG,CAAC;IAEhK,cAAc,CAAC,WAAmB,EAAE,QAAgB,EAAE,SAAiB;;YACzE,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YAEtD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC;YACxL,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7J,CAAC;KAAA;IAEK,WAAW,CAAC,WAAmB,EAAE,QAAgB;;YACnD,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3C,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC;YACzI,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACjG,CAAC;KAAA;IAEK,aAAa,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB,EAAE,gBAAkC;;YAC9F,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3C,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC;YAEnG,IAAI,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9E,IAAI,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;oBACvF,MAAM,EAAE,GAAG,IAAI,gBAAK,CAAC,QAAQ,EAAE,CAAC;oBAChC,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,YAAY,+BACpC,GAAG,EAAE,EAAE,EACP,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,IACjB,gBAAgB,KACnB,KAAK,EAAE,EAAE,EACT,YAAY,EAAE,IAAI,IAAI,EAAE,EACxB,QAAQ,EAAE,KAAK,IACjB,CAAC;oBAEH,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,oBAAoB,EAAE,UAAU,EAAC,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;oBAC5M,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjI;qBAAM;oBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;iBACpE;aACJ;iBAAM;gBACH,MAAM,EAAE,GAAG,IAAI,gBAAK,CAAC,QAAQ,EAAE,CAAC;gBAChC,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,YAAY,+BACpC,GAAG,EAAE,EAAE,EACP,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,IACjB,gBAAgB,KACnB,KAAK,EAAE,EAAE,EACT,YAAY,EAAE,IAAI,IAAI,EAAE,EACxB,QAAQ,EAAE,KAAK,IACjB,CAAC;gBAEH,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,oBAAoB,EAAE,UAAU,EAAC,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;gBAC5M,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjI;QACL,CAAC;KAAA;IAEK,WAAW,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB,EAAE,SAAiB;;YAC3E,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YAEtD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YAE5E,IAAI,MAAM,CAAC;YAEX,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/D,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,qCAAqC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC,EAAC,EAAE,EAAC,YAAY,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;aAC5R;iBAAM;gBACH,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,qCAAqC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC,EAAC,EAAE,EAAC,YAAY,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;aAC5R;YAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnK,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,wCAAwC,EAAE,IAAI,EAAC,EAAC,EAAE,EAAC,YAAY,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;aACvR;iBAAM;gBACH,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,wCAAwC,EAAE,KAAK,EAAC,EAAC,EAAE,EAAC,YAAY,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;aACxR;YAED,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1J,CAAC;KAAA;IAEK,aAAa,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB,EAAE,SAAiB,EAAE,OAAyB;;YACxG,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YAEtD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC;YAC5F,MAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhI,IAAI,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACtF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAC/E,MAAM,UAAU,mCAAQ,UAAU,GAAK,OAAO,CAAE,CAAC;gBAEjD,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,oBAAoB,EAAE,UAAU,EAAC,EAAC,CAAC,CAAC;gBAC7K,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,oBAAoB,EAAE,UAAU,EAAC,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;aACpM;iBAAM;gBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACpE;QACL,CAAC;KAAA;IAEK,aAAa,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB,EAAE,SAAiB;;YAC7E,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YAEtD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC;YAC5F,MAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhI,IAAI,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACtF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAC5E,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,oBAAoB,EAAE,OAAO,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;aAClM;iBAAM;gBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACpE;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,WAAmB,EAAE,QAAiB,EAAE,SAAkB;;YACrE,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE9F,IAAI,CAAC,SAAS,EAAE;gBACZ,MAAM,IAAI,0CAAmB,CAAC,CAAC,qBAAqB,WAAW,kBAAkB,CAAC,CAAC,CAAC;aACvF;YAED,IAAG,QAAQ,EAAE;gBACT,IAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBACxF,MAAM,IAAI,0CAAmB,CAAC,CAAC,kBAAkB,QAAQ,2CAA2C,WAAW,GAAG,CAAC,CAAC,CAAC;iBACxH;aACJ;YAED,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBAC9J,MAAM,IAAI,0CAAmB,CAAC,CAAC,mBAAmB,SAAS,wCAAwC,QAAQ,6BAA6B,WAAW,GAAG,CAAC,CAAC,CAAC;iBAC5J;aACJ;QACL,CAAC;KAAA;CACJ;AA/HY,eAAe;IAD3B,uBAAU,GAAE;IAEI,6CAAW,EAAC,4BAAS,CAAC,IAAI,CAAC;IAAoD,6CAAW,EAAC,wBAAO,CAAC,IAAI,CAAC;iEAApD,gBAAK,oBAAL,gBAAK,oDAAsE,gBAAK,oBAAL,gBAAK;GADxI,eAAe,CA+H3B;AA/HY,0CAAe;;;;;;;;;;;;ACV5B,iEAGyB;AAEzB,MAAa,gBAAgB;CAI5B;AAHG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;iDACG;AAHpB,4CAIC;;;;;;;;;;;ACTD,uDAAqD;AAErD,MAAa,mBAAoB,SAAQ,4BAAmB;IACxD,YAAmB,gBAA0B;QACzC,KAAK,EAAE,CAAC;QADO,qBAAgB,GAAhB,gBAAgB,CAAU;IAE7C,CAAC;CACJ;AAJD,kDAIC;;;;;;;;;;;;ACND,uDAAuE;AACvE,uHAA6D;AAGtD,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;IACzB,KAAK,CAAE,SAA8B,EAAE,IAAmB;QACtD,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,EAC/B,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAE7B,OAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC7B,UAAU,EAAE,GAAG;YACf,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,SAAS,EAAE,kBAAkB;YAC7B,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;SAC/C,CAAC,CAAC;IACP,CAAC;CACJ;AAZY,gBAAgB;IAD5B,kBAAK,EAAC,0CAAmB,CAAC;GACd,gBAAgB,CAY5B;AAZY,4CAAgB;;;;;;;;;;;ACH7B,uHAAsE;AACtE,IAAI,QAAQ,GAAG,gDAAkC,CAAC;AAElD,MAAa,YAAY;IACrB,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC1B,MAAM,IAAI,0CAAmB,CAAC,CAAC,6BAA6B,KAAK,0BAA0B,CAAC,CAAC,CAAC;SACjG;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,eAAe,CAAC,KAAU;QACpC,IAAI;YACA,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;SACf;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;CACJ;AAjBD,oCAiBC;;;;;;;;;;;;ACrBD,iEAIyB;AAEzB,MAAa,cAAc;CAK1B;AAJG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;4CACC;AAJjB,wCAKC;;;;;;;;;;;;;ACXD,2DAA+D;AAC/D,mDAA2C;AAKpC,IAAM,KAAK,GAAX,MAAM,KAAK;CAMjB;AALG;IAAC,mBAAI,GAAE;0DACF,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;kCAAC;AAEpB;IAAC,mBAAI,GAAE;;mCACM;AALJ,KAAK;IADjB,qBAAM,GAAE;GACI,KAAK,CAMjB;AANY,sBAAK;AAQL,mBAAW,GAAG,wBAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;ACd/D,uDAAmF;AACnF,mGAAgD;AAChD,yGAA8D;AAC9D,wFAA0C;AAC1C,uGAAoD;AAEpD,mGAAiD;AAG1C,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;IAC3B,YAA6B,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IAGtD,SAAS;;YACb,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC7C,CAAC;KAAA;IAGK,YAAY,CAA4B,EAAU;;YACtD,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAClD,CAAC;KAAA;IAIK,WAAW,CAAS,cAA8B;;YACtD,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC;KAAA;IAIK,WAAW,CAA4B,EAAU;;YACrD,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACjD,CAAC;KAAA;CACF;AApBO;IADL,gBAAG,GAAE;;;gEACa,OAAO,oBAAP,OAAO;iDAEzB;AAGK;IADL,gBAAG,EAAC,KAAK,CAAC;IACS,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;oDAEjE;AAIK;IAFL,2BAAK,EAAC,gBAAI,CAAC,KAAK,CAAC;IACjB,iBAAI,GAAE;IACY,oCAAI,GAAE;;iEAAiB,iCAAc,oBAAd,iCAAc;gEAAG,OAAO,oBAAP,OAAO;mDAEjE;AAIK;IAFL,2BAAK,EAAC,gBAAI,CAAC,KAAK,CAAC;IACjB,mBAAM,EAAC,KAAK,CAAC;IACK,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;mDAEhE;AAvBU,gBAAgB;IAD5B,uBAAU,EAAC,OAAO,CAAC;iEAEyB,8BAAa,oBAAb,8BAAa;GAD7C,gBAAgB,CAwB5B;AAxBY,4CAAgB;;;;;;;;;;;;ACT7B,uDAAwC;AACxC,2DAAkD;AAClD,+FAAoD;AACpD,yGAAuD;AACvD,mGAAiD;AAS1C,IAAM,YAAY,GAAlB,MAAM,YAAY;CAAG;AAAf,YAAY;IAPxB,mBAAM,EAAC;QACJ,OAAO,EAAE,CAAC,yBAAc,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,oBAAK,CAAC,IAAI,EAAE,MAAM,EAAE,0BAAW,EAAE,CAAC,CAAC,CAAC;QACjF,WAAW,EAAE,CAAC,oCAAgB,CAAC;QAC/B,SAAS,EAAE,CAAC,8BAAa,CAAC;QAC1B,OAAO,EAAE,CAAC,8BAAa,CAAC;KAC3B,CAAC;GAEW,YAAY,CAAG;AAAf,oCAAY;;;;;;;;;;;;;ACbzB,uDAA4C;AAC5C,mDAAwC;AACxC,+FAAsD;AACtD,uHAA6E;AAC7E,2DAA+C;AAGxC,IAAM,aAAa,GAAnB,MAAM,aAAa;IACtB,YAA6C,UAAgC;QAAhC,eAAU,GAAV,UAAU,CAAsB;IAAG,CAAC;IAE3E,YAAY,CAAC,EAAU;;YACzB,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpE,CAAC;KAAA;IAEK,SAAS;;YACX,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC,CAAC;KAAA;IAEK,WAAW,CAAC,IAAY;;YAC1B,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClE,MAAM,IAAI,0CAAmB,CAAC,CAAC,wCAAwC,CAAC,CAAC;aAC5E;YAED,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC;gBACjC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,EAAE;gBACzB,IAAI;aACP,CAAC;YAEF,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;KAAA;IAEK,WAAW,CAAC,EAAU;;YACxB,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7E,CAAC;KAAA;IAEK,QAAQ,CAAC,OAAe;;YAC1B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAElF,IAAI,CAAC,KAAK,EAAE;gBACR,MAAM,IAAI,0CAAmB,CAAC,CAAC,iBAAiB,OAAO,kBAAkB,CAAC,CAAC,CAAC;aAC/E;QACL,CAAC;KAAA;CACJ;AArCY,aAAa;IADzB,uBAAU,GAAE;IAEI,6CAAW,EAAC,oBAAK,CAAC,IAAI,CAAC;iEAAqB,gBAAK,oBAAL,gBAAK;GADrD,aAAa,CAqCzB;AArCY,sCAAa;;;;;;;;;;;;ACP1B,iEAEyB;AAEzB,MAAa,eAAe;CAS3B;AARG;IAAC,8BAAQ,GAAE;;8CACG;AAEd;IAAC,8BAAQ,GAAE;;gDACK;AAEhB;IAAC,8BAAQ,GAAE;;8CACG;AARlB,0CASC;;;;;;;;;;;;;ACbD,2DAA+D;AAC/D,mDAA2C;AAMpC,IAAM,MAAM,GAAZ,MAAM,MAAM;CAiClB;AAhCG;IAAC,mBAAI,GAAE;0DACF,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;mCAAC;AAEpB;IAAC,mBAAI,GAAE;;qCACO;AAEd;IAAC,mBAAI,GAAE;;uCACS;AAEhB;IAAC,mBAAI,GAAE;;qCACO;AAEd;IAAC,mBAAI,EAAC;QACF,GAAG,EAAE,MAAM;KACd,CAAC;;qCACsB;AAExB;IAAC,mBAAI,GAAE;0DACO,IAAI,oBAAJ,IAAI;4CAAC;AAEnB;IAAC,mBAAI,GAAE;;qCACO;AAEd;IAAC,mBAAI,EAAC;QACF,OAAO,EAAE,EAAE;KACd,CAAC;;wCACiB;AAEnB;IAAC,mBAAI,EAAC;QACF,GAAG,EAAE,MAAM;KACd,CAAC;0DACO,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;uCAAC;AAhCf,MAAM;IADlB,qBAAM,GAAE;GACI,MAAM,CAiClB;AAjCY,wBAAM;AAmCN,oBAAY,GAAG,wBAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;AC1CjE,uDAAwF;AACxF,sGAAmD;AAEnD,0GAAsD;AACtD,0GAAsD;AACtD,oFAAuC;AACvC,yGAA8D;AAGvD,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;IAC5B,YAA6B,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;IAAG,CAAC;IAIxD,UAAU,CAAqC,WAAmB;;YACtE,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAC1D,CAAC;KAAA;IAIK,aAAa,CAAqC,WAAmB,EAAmC,QAAgB;;YAC5H,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACvE,CAAC;KAAA;IAGK,YAAY,CAAQ,GAAG,EAAU,eAAgC,EAAsC,WAAmB;;YAC9H,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAClF,CAAC;KAAA;IAGK,UAAU,CAAQ,GAAG,EAAsC,WAAmB,EAAmC,QAAgB;;YACrI,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QACzE,CAAC;KAAA;IAGK,UAAU,CAAqC,WAAmB,EAAmC,QAAgB;;YACzH,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACpE,CAAC;KAAA;IAGK,YAAY,CAAQ,GAAG,EAAsC,WAAmB,EAAmC,QAAgB,EAAU,eAAgC;;YACjL,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC5F,CAAC;KAAA;IAGK,YAAY,CAAQ,GAAG,EAAsC,WAAmB,EAAmC,QAAgB;;YACvI,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC3E,CAAC;KAAA;CACF;AAlCO;IAFL,uBAAM,GAAE;IACR,gBAAG,EAAC,qBAAqB,CAAC;IACT,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;;;gEAAuB,OAAO,oBAAP,OAAO;mDAEjF;AAIK;IAFL,uBAAM,GAAE;IACR,gBAAG,EAAC,+BAA+B,CAAC;IAChB,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAAuB,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;;;gEAAoB,OAAO,oBAAP,OAAO;sDAEvI;AAGK;IADL,iBAAI,EAAC,qBAAqB,CAAC;IACR,mCAAG,GAAE;IAAO,oCAAI,GAAE;IAAoC,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;;yEAApD,mCAAe,oBAAf,mCAAe;gEAA4D,OAAO,oBAAP,OAAO;qDAEzI;AAGK;IADL,iBAAI,EAAC,oCAAoC,CAAC;IACzB,mCAAG,GAAE;IAAO,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAAuB,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;;;;mDAErH;AAGK;IADL,iBAAI,EAAC,oCAAoC,CAAC;IACzB,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAAuB,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;;;;mDAEzG;AAGK;IADL,kBAAK,EAAC,+BAA+B,CAAC;IACnB,mCAAG,GAAE;IAAO,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAAuB,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;IAAoB,oCAAI,GAAE;;yFAAkB,mCAAe,oBAAf,mCAAe;gEAAG,OAAO,oBAAP,OAAO;qDAE5L;AAGK;IADL,mBAAM,EAAC,+BAA+B,CAAC;IACpB,mCAAG,GAAE;IAAO,qCAAK,EAAC,aAAa,EAAE,6BAAY,CAAC;IAAuB,qCAAK,EAAC,UAAU,EAAE,6BAAY,CAAC;;;gEAAoB,OAAO,oBAAP,OAAO;qDAElJ;AAtCU,iBAAiB;IAD7B,uBAAU,EAAC,WAAW,CAAC;iEAEsB,gCAAc,oBAAd,gCAAc;GAD/C,iBAAiB,CAuC7B;AAvCY,8CAAiB;;;;;;;;;;;;ACT9B,2DAAkD;AAClD,uDAAwC;AACxC,kGAAuD;AACvD,4GAAyD;AACzD,sGAAmD;AACnD,8FAAoD;AACpD,gHAAsE;AAQ/D,IAAM,aAAa,GAAnB,MAAM,aAAa;CAAG;AAAhB,aAAa;IANzB,mBAAM,EAAC;QACJ,OAAO,EAAE,CAAC,yBAAc,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,sBAAM,CAAC,IAAI,EAAE,MAAM,EAAE,4BAAY,EAAE,CAAC,CAAC,EAAE,0BAAW,EAAE,sCAAiB,CAAC;QACnH,WAAW,EAAE,CAAC,sCAAiB,CAAC;QAChC,SAAS,EAAE,CAAC,gCAAc,CAAC;KAC9B,CAAC;GAEW,aAAa,CAAG;AAAhB,sCAAa;;;;;;;;;;;;;ACd1B,uDAAuE;AACvE,mDAAwC;AACxC,kGAAyD;AACzD,gGAAsD;AACtD,2DAA+C;AAC/C,4GAA+E;AAC/E,kHAAwE;AAExE,uHAA6E;AAC7E,wFAA0C;AAGnC,IAAM,cAAc,GAApB,MAAM,cAAc;IACvB,YAAiD,cAAwC,EAAoC,WAAkC,EAAmB,YAA0B,EAAmB,kBAAsC;QAApN,mBAAc,GAAd,cAAc,CAA0B;QAAoC,gBAAW,GAAX,WAAW,CAAuB;QAAmB,iBAAY,GAAZ,YAAY,CAAc;QAAmB,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEnQ,aAAa,CAAC,WAAmB,EAAE,QAAgB;;YACrD,6CAA6C;YAC7C,0IAA0I;YAE1I,OAAO,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;gBACxC,EAAE,MAAM,EAAG,EAAE,GAAG,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAC;gBACpD,EAAE,MAAM,EAAG,EAAE,aAAa,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAC;gBAC3D,EAAE,QAAQ,EAAG;wBACT,GAAG,EAAG,CAAC;wBACP,SAAS,EAAG;4BACR,OAAO,EAAG;gCACN,KAAK,EAAG,UAAU;gCAClB,EAAE,EAAG,QAAQ;gCACb,IAAI,EAAG,EAAE,GAAG,EAAG,CAAC,cAAc,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAC;6BACjE;yBACJ;qBAAC;iBACL;gBACD,EAAE,OAAO,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAC;gBACnE,EAAE,OAAO,EAAG;wBACR,IAAI,EAAG,OAAO;wBACd,UAAU,EAAG,iBAAiB;wBAC9B,YAAY,EAAG,KAAK;wBACpB,EAAE,EAAG,iBAAiB;qBACzB,EAAC;gBACF,EAAE,OAAO,EAAG,EAAE,IAAI,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAC;gBAC5E,EAAE,OAAO,EAAG,EAAE,IAAI,EAAE,2BAA2B,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAC;gBACpF,EAAE,OAAO,EAAG;wBACR,IAAI,EAAG,OAAO;wBACd,UAAU,EAAG,0BAA0B;wBACvC,YAAY,EAAG,KAAK;wBACpB,EAAE,EAAG,0BAA0B;qBACjC,EAAC;gBACF,EAAE,MAAM,EAAE;wBACP,0BAA0B;wBAC1B,qBAAqB;wBACrB,mCAAmC;wBACnC,8BAA8B;qBACjC,EAAC;aACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC;KAAA;IAEK,UAAU,CAAC,WAAmB;;YAChC,mCAAmC;YACnC,+EAA+E;YAE/E,OAAO,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;gBACxC,EAAE,MAAM,EAAG,EAAE,GAAG,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAC;gBACpD,EAAE,QAAQ,EAAG;wBACT,GAAG,EAAG,CAAC;wBACP,SAAS,EAAG;4BACR,OAAO,EAAG;gCACN,KAAK,EAAG,UAAU;gCAClB,EAAE,EAAG,QAAQ;gCACb,IAAI,EAAG,IAAI;6BACd;yBACJ;qBAAC;iBACL;gBACD,EAAE,OAAO,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAC;gBACnE,EAAE,OAAO,EAAG;wBACR,IAAI,EAAG,OAAO;wBACd,UAAU,EAAG,iBAAiB;wBAC9B,YAAY,EAAG,KAAK;wBACpB,EAAE,EAAG,iBAAiB;qBACzB,EAAC;gBACF,EAAE,OAAO,EAAG,EAAE,IAAI,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAC;gBAC5E,EAAE,OAAO,EAAG,EAAE,IAAI,EAAE,2BAA2B,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAC;gBACpF,EAAE,OAAO,EAAG;wBACR,IAAI,EAAG,OAAO;wBACd,UAAU,EAAG,0BAA0B;wBACvC,YAAY,EAAG,KAAK;wBACpB,EAAE,EAAG,0BAA0B;qBACjC,EAAC;gBACF,EAAE,MAAM,EAAE;wBACP,0BAA0B;wBAC1B,qBAAqB;wBACrB,mCAAmC;wBACnC,8BAA8B;qBACjC,EAAC;aACL,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC;KAAA;IAEK,YAAY,CAAC,GAAG,EAAE,WAAmB,EAAE,eAAgC;;YACzE,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAEjC,IAAI,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3H,IAAI,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;oBACpI,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,WAAW,iCAC/B,eAAe,KAClB,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,EAAE,EACzB,KAAK,EAAE,CAAC,EACR,YAAY,EAAE,IAAI,IAAI,EAAE,EACxB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,IACtB,CAAC;oBAEH,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC,EAAC,CAAC,CAAC;iBAC5H;qBAAM;oBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;iBACpE;aACJ;iBAAM;gBACH,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,WAAW,iCAC/B,eAAe,KAClB,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,EAAE,EACzB,KAAK,EAAE,CAAC,EACR,YAAY,EAAE,IAAI,IAAI,EAAE,EACxB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,IACtB,CAAC;gBAEH,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC,EAAC,CAAC,CAAC;aAC5H;QACL,CAAC;KAAA;IAEK,UAAU,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB;;YACvD,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3C,IAAI,SAAS,CAAC;YAEd,IAAI,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAE,EAAC,OAAO,EAAE,EAAC,UAAU,EAAE,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,EAAC,EAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7L,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,iBAAiB,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;aACvM;iBAAM;gBACH,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,iBAAiB,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;aACvM;YAED,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC;KAAA;IAEK,UAAU,CAAC,WAAmB,EAAE,QAAgB;;YAClD,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3C,IAAI,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,aAAa,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,iBAAiB,EAAG,CAAC,EAAC,EAAC,CAAC,CAAC;YACnL,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC;KAAA;IAEK,YAAY,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB,EAAE,MAAuB;;YAClF,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3C,IAAI,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACtH,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;gBAClE,MAAM,SAAS,mCAAQ,SAAS,GAAK,MAAM,CAAE,CAAC;gBAE9C,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC,EAAC,CAAC,CAAC;gBAClH,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC,EAAC,CAAC,CAAC;aAC5H;iBAAM;gBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACpE;QACL,CAAC;KAAA;IAEK,YAAY,CAAC,GAAG,EAAE,WAAmB,EAAE,QAAgB;;YACzD,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3C,IAAI,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACtH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;gBAC/D,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;aACzH;iBAAM;gBACH,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aACpE;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,WAAoB,EAAE,QAAkB;;YACnD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,GAAG,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE/F,IAAG,CAAC,SAAS,EAAE;gBACX,MAAM,IAAI,0CAAmB,CAAC,CAAC,qBAAqB,WAAW,kBAAkB,CAAC,CAAC,CAAC;aACvF;YAED,IAAG,QAAQ,EAAE;gBACT,IAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBAClG,MAAM,IAAI,0CAAmB,CAAC,CAAC,kBAAkB,QAAQ,2CAA2C,WAAW,GAAG,CAAC,CAAC,CAAC;iBACxH;aACJ;QACL,CAAC;KAAA;CACJ;AA7KY,cAAc;IAD1B,uBAAU,GAAE;IAEI,6CAAW,EAAC,4BAAS,CAAC,IAAI,CAAC;IAAoD,6CAAW,EAAC,sBAAM,CAAC,IAAI,CAAC;iEAAnD,gBAAK,oBAAL,gBAAK,oDAAoE,gBAAK,oBAAL,gBAAK,oDAAiD,4BAAY,oBAAZ,4BAAY,oDAAuC,wCAAkB,oBAAlB,wCAAkB;GAD5P,cAAc,CA6K1B;AA7KY,wCAAc;;;;;;;;;;;;ACZ3B,iEAGyB;AAEzB,MAAa,eAAe;CAY3B;AAXG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;8CACC;AAEd;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;gDACG;AAEhB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;8CACC;AAXlB,0CAYC;;;;;;;;;;;;;ACjBD,iEAKyB;AAEzB,MAAa,aAAa;CA4BzB;AA3BG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;+CACK;AAEjB;IAAC,6BAAO,EAAC,6BAA6B,CAAC;IACtC,gCAAU,GAAE;IACZ,+BAAS,GAAE;0DACD,IAAI,oBAAJ,IAAI;gDAAC;AAEhB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;mDACS;AAErB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;kDACQ;AAEpB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;IACZ,+BAAS,GAAE;;+CACK;AAEjB;IAAC,8BAAQ,GAAE;;4CACG;AA3BlB,sCA4BC;;;;;;;;;;;ACnCD,IAAY,IAGX;AAHD,WAAY,IAAI;IACZ,qBAAa;IACb,uBAAe;AACnB,CAAC,EAHW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAGf;;;;;;;;;;;;;ACHD,iEAIyB;AAEzB,MAAa,aAAa;CAwBzB;AAvBG;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;+CACI;AAEjB;IAAC,6BAAO,EAAC,6BAA6B,CAAC;IACtC,gCAAU,GAAE;0DACF,IAAI,oBAAJ,IAAI;gDAAC;AAEhB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;mDACQ;AAErB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;kDACO;AAEpB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;+CACI;AAEjB;IAAC,8BAAQ,GAAE;IACV,gCAAU,GAAE;;4CACC;AAvBlB,sCAwBC;;;;;;;;;;;;;AC9BD,2DAA+D;AAC/D,mDAAqE;AAM9D,IAAM,IAAI,GAAV,MAAM,IAAI;CAuChB;AAtCG;IAAC,mBAAI,GAAE;0DACF,gBAAK,oBAAL,gBAAK,CAAC,QAAQ;iCAAC;AAEpB;IAAC,mBAAI,EAAC;QACF,MAAM,EAAE,IAAI;KACf,CAAC;;sCACe;AAEjB;IAAC,mBAAI,GAAE;0DACI,IAAI,oBAAJ,IAAI;uCAAC;AAEhB;IAAC,mBAAI,GAAE;;0CACc;AAErB;IAAC,mBAAI,GAAE;;yCACa;AAEpB;IAAC,mBAAI,GAAE;;sCACU;AAEjB;IAAC,mBAAI,GAAE;0DACO,IAAI,oBAAJ,IAAI;0CAAC;AAEnB;IAAC,mBAAI,GAAE;;mCACO;AAEd;IAAC,mBAAI,GAAE;;mCACO;AAEd;IAAC,mBAAI,EAAC;QACF,GAAG,EAAE,MAAM;KACd,CAAC;;uCAC0B;AAE5B;IAAC,mBAAI,EAAC;QACF,GAAG,EAAE,MAAM;KACd,CAAC;;uCAC0B;AAtCnB,IAAI;IADhB,qBAAM,GAAE;GACI,IAAI,CAuChB;AAvCY,oBAAI;AAyCJ,kBAAU,GAAG,wBAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;;;;;;;;;;;;;AChD7D,uDAAwF;AAExF,mGAAgD;AAChD,yGAA8D;AAC9D,oGAAkD;AAClD,wFAAmC;AACnC,oGAAkD;AAElD,gGAA+C;AAGxC,IAAM,eAAe,GAArB,MAAM,eAAe;IACxB,YAA6B,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;IAAG,CAAC;IAGpD,QAAQ;;YACV,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC7C,CAAC;KAAA;IAGK,WAAW,CAA4B,EAAU;;YACnD,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAClD,CAAC;KAAA;IAGK,iBAAiB,CAAoB,QAAgB;;YACvD,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC9D,CAAC;KAAA;IAGK,UAAU,CAAQ,GAAG,EAA6B,EAAU;;YAC9D,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACtD,CAAC;KAAA;IAGK,YAAY,CAAQ,GAAG,EAA6B,EAAU;;YAChE,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC;KAAA;IAIK,UAAU,CAAS,aAA4B;;YACjD,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAClM,CAAC;KAAA;IAGK,UAAU,CAAQ,GAAG,EAA6B,EAAU,EAAU,aAA4B;;YACpG,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;QACrE,CAAC;KAAA;CACJ;AAlCS;IADL,gBAAG,GAAE;;;gEACY,OAAO,oBAAP,OAAO;+CAExB;AAGK;IADL,gBAAG,EAAC,KAAK,CAAC;IACQ,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;kDAEhE;AAGK;IADL,gBAAG,EAAC,WAAW,CAAC;IACQ,qCAAK,EAAC,UAAU,CAAC;;;gEAAoB,OAAO,oBAAP,OAAO;wDAEpE;AAGK;IADL,iBAAI,EAAC,YAAY,CAAC;IACD,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;iDAE3E;AAGK;IADL,iBAAI,EAAC,cAAc,CAAC;IACD,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;;;gEAAc,OAAO,oBAAP,OAAO;mDAE7E;AAIK;IAFL,iBAAI,GAAE;IACN,2BAAK,EAAC,gBAAI,CAAC,KAAK,CAAC;IACA,oCAAI,GAAE;;iEAAgB,+BAAa,oBAAb,+BAAa;gEAAG,OAAO,oBAAP,OAAO;iDAE9D;AAGK;IADL,kBAAK,EAAC,KAAK,CAAC;IACK,mCAAG,GAAE;IAAO,qCAAK,EAAC,IAAI,EAAE,6BAAY,CAAC;IAAc,oCAAI,GAAE;;iFAAgB,+BAAa,oBAAb,+BAAa;gEAAG,OAAO,oBAAP,OAAO;iDAEjH;AArCQ,eAAe;IAD3B,uBAAU,EAAC,MAAM,CAAC;iEAE2B,4BAAY,oBAAZ,4BAAY;GAD7C,eAAe,CAsC3B;AAtCY,0CAAe;;;;;;;;;;;;ACX5B,uDAAoD;AACpD,2DAAkD;AAClD,gHAAsE;AACtE,4FAAiD;AACjD,sGAAqD;AACrD,gGAA+C;AAQxC,IAAM,WAAW,GAAjB,MAAM,WAAW;CAAG;AAAd,WAAW;IANvB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,yBAAc,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,kBAAI,CAAC,IAAI,EAAE,MAAM,EAAE,wBAAU,EAAE,CAAC,CAAC,EAAE,uBAAU,EAAC,GAAG,EAAE,CAAC,sCAAiB,CAAC,CAAC;QACpH,WAAW,EAAE,CAAC,kCAAe,CAAC;QAC9B,SAAS,EAAE,CAAC,4BAAY,CAAC;QACzB,OAAO,EAAE,CAAC,4BAAY,CAAC;KACxB,CAAC;GACW,WAAW,CAAG;AAAd,kCAAW;;;;;;;;;;;;;ACbxB,uDAA2F;AAC3F,mDAAwC;AACxC,wFAAmC;AACnC,6CAAiC;AACjC,uHAA6E;AAC7E,4FAAmD;AACnD,2DAA+C;AAC/C,kHAAwE;AACxE,4GAA+E;AAGxE,IAAM,YAAY,GAAlB,MAAM,YAAY;IACvB,YAA4C,SAA8B,EAAuC,cAAwC,EAAiE,kBAAsC;QAApN,cAAS,GAAT,SAAS,CAAqB;QAAuC,mBAAc,GAAd,cAAc,CAA0B;QAAiE,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAE9P,iBAAiB,CAAC,QAAgB;;YACtC,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxD,CAAC;KAAA;IAEK,QAAQ;;YACZ,iCAAiC;YACjC,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBACpC,EAAC,OAAO,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,UAAU,EAAE,WAAW;wBACvB,YAAY,EAAE,KAAK;wBACnB,EAAE,EAAE,WAAW;qBAChB,EAAC;gBACF,EAAC,OAAO,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,UAAU,EAAE,WAAW;wBACvB,YAAY,EAAE,KAAK;wBACnB,EAAE,EAAE,WAAW;qBAChB,EAAC;gBACF,EAAC,MAAM,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC,EAAC;aAC9B,CAAC;QACJ,CAAC;KAAA;IAEK,WAAW,CAAC,EAAU;;YAC1B,iEAAiE;YACjE,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,OAAO,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBACrC,EAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAC;gBAC3C,EAAC,OAAO,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,UAAU,EAAE,WAAW;wBACvB,YAAY,EAAE,KAAK;wBACnB,EAAE,EAAE,WAAW;qBAChB,EAAC;gBACF,EAAC,OAAO,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,UAAU,EAAE,WAAW;wBACvB,YAAY,EAAE,KAAK;wBACnB,EAAE,EAAE,WAAW;qBAChB,EAAC;gBACF,EAAC,MAAM,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC,EAAC;aAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC;KAAA;IAEK,UAAU,CAAC,GAAG,EAAE,EAAU;;YAC9B,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACxC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEzD,IAAI,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBACxC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAE,EAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,SAAS,EAAE,EAAE,GAAG,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC,EAAC,CAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;oBAC5H,YAAY,CAAC,SAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9C,IAAI,CAAC,SAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;oBAE/C,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,EAAE,YAAY,CAAC,CAAC;oBACvG,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;oBAE/E,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;iBACnC;qBAAM;oBACL,MAAM,IAAI,0CAAmB,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,MAAM,IAAI,0CAAmB,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;aAC7D;QACH,CAAC;KAAA;IAEK,YAAY,CAAC,GAAG,EAAE,EAAU;;YAChC,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACxC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEzD,IAAI,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBACxC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAE,EAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,SAAS,EAAE,EAAE,GAAG,EAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC,EAAC,CAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;oBAC9H,YAAY,CAAC,SAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9C,IAAI,CAAC,SAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;oBAE/C,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,EAAE,YAAY,CAAC,CAAC;oBACvG,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;oBAE/E,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;iBACnC;qBAAM;oBACL,MAAM,IAAI,0CAAmB,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,MAAM,IAAI,0CAAmB,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC;aAC/D;QACH,CAAC;KAAA;IAEK,UAAU,CAAC,QAAgB,EAAE,SAAe,EAAE,YAAoB,EAAE,WAAmB,EAAE,QAAgB,EAAE,KAAa;;YAC5H,QAAQ,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAE/C,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;YAE7C,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE;gBAC1B,MAAM,IAAI,0CAAmB,CAAC,CAAC,aAAa,SAAS,sBAAsB,CAAC,CAAC,CAAC;aAC/E;YAED,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3E,MAAM,IAAI,0CAAmB,CAAC,CAAC,YAAY,QAAQ,kBAAkB,CAAC,CAAC,CAAC;aACzE;YAED,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC;gBACjC,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,EAAE;gBACzB,QAAQ;gBACR,SAAS;gBACT,YAAY;gBACZ,WAAW;gBACX,QAAQ;gBACR,YAAY,EAAE,IAAI,IAAI,EAAE;gBACxB,KAAK;gBACL,KAAK,EAAE,CAAC,gBAAI,CAAC,IAAI,CAAC;aACnB,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC;KAAA;IAEK,UAAU,CAAC,GAAG,EAAE,EAAU,EAAE,IAAmB;;YACnD,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExB,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAI,CAAC,KAAK,CAAC,EAAE;gBACrF,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3H,MAAM,IAAI,0CAAmB,CAAC,CAAC,YAAY,IAAI,CAAC,QAAQ,kBAAkB,CAAC,CAAC,CAAC;qBAC9E;iBACF;gBAED,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC1C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;oBAEvD,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE;wBAC/B,MAAM,IAAI,0CAAmB,CAAC,CAAC,aAAa,IAAI,CAAC,SAAS,sBAAsB,CAAC,CAAC,CAAC;qBACpF;iBACF;gBAED,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;iBAC1D;gBAED,IAAI,CAAC,GAAG,GAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAElC,MAAM,gBAAgB,GAAG,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEpH,gBAAgB,CAAC,OAAO,CAAC,CAAM,IAAI,EAAC,EAAE;oBACpC,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,kCAAM,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAK,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC;gBAC5I,CAAC,EAAC,CAAC;gBAEH,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aAC/E;iBAAM;gBACL,MAAM,IAAI,sBAAa,CAAC,cAAc,EAAE,mBAAU,CAAC,YAAY,CAAC,CAAC;aAClE;QACH,CAAC;KAAA;IAEK,QAAQ,CAAC,MAAc;;YAC3B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,gBAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE/E,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,IAAI,0CAAmB,CAAC,CAAC,gBAAgB,MAAM,kBAAkB,CAAC,CAAC,CAAC;aAC3E;QACH,CAAC;KAAA;CACF;AAvKY,YAAY;IADxB,uBAAU,GAAE;IAEE,6CAAW,EAAC,kBAAI,CAAC,IAAI,CAAC;IAA0C,6CAAW,EAAC,4BAAS,CAAC,IAAI,CAAC;IAAoD,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,wCAAkB,CAAC,CAAC;iEAAjJ,gBAAK,oBAAL,gBAAK,oDAAqE,gBAAK,oBAAL,gBAAK,oDAAwG,wCAAkB,oBAAlB,wCAAkB;GADrP,YAAY,CAuKxB;AAvKY,oCAAY;;;;;;;;ACXzB;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,uDAAyE;AACzE,mDAA2C;AAE3C,oFAA6C;AAC7C,iHAA0E;AAC1E,uHAAgF;AAEhF,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,KAAK,CAAC;QAC3B,GAAG,CAAC,UAAU,EAAE,CAAC;QACjB,GAAG,CAAC,gBAAgB,CAAC,IAAI,oCAAgB,CAAC,CAAC;QAC3C,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAClC,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,CAAC;YACpC,gBAAgB,EAAE,CAAC,MAAyB,EAAE,EAAE;gBAC9C,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CACzB,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,oBAAoB,KAAK,CAAC,KAAK,KAAK,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAC5G;gBAED,OAAO,IAAI,0CAAmB,CAAC,QAAQ,CAAC,CAAC;YAC3C,CAAC;SACF,CAAC,CAAC,CAAC;QACJ,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,eAAM,CAAC,GAAG,CACR,kDAAkD,IAAI,IAAI,YAAY,EAAE,CACzE,CAAC;IACJ,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sources":["webpack://gessit/./apps/gessit-api/src/app/app.controller.ts","webpack://gessit/./apps/gessit-api/src/app/app.module.ts","webpack://gessit/./apps/gessit-api/src/app/app.service.ts","webpack://gessit/./apps/gessit-api/src/app/auth/auth.controller.ts","webpack://gessit/./apps/gessit-api/src/app/auth/auth.module.ts","webpack://gessit/./apps/gessit-api/src/app/auth/auth.service.ts","webpack://gessit/./apps/gessit-api/src/app/auth/constant.ts","webpack://gessit/./apps/gessit-api/src/app/auth/jwt-auth.guard.ts","webpack://gessit/./apps/gessit-api/src/app/auth/jwt.strategy.ts","webpack://gessit/./apps/gessit-api/src/app/auth/local-auth.guard.ts","webpack://gessit/./apps/gessit-api/src/app/auth/local.strategy.ts","webpack://gessit/./apps/gessit-api/src/app/auth/roles.decorator.ts","webpack://gessit/./apps/gessit-api/src/app/auth/roles.guard.ts","webpack://gessit/./apps/gessit-api/src/app/communities/communities.controller.ts","webpack://gessit/./apps/gessit-api/src/app/communities/communities.module.ts","webpack://gessit/./apps/gessit-api/src/app/communities/communities.service.ts","webpack://gessit/./apps/gessit-api/src/app/communities/community.schema.ts","webpack://gessit/./apps/gessit-api/src/app/communities/create-community.dto.ts","webpack://gessit/./apps/gessit-api/src/app/communities/update-community.dto.ts","webpack://gessit/./apps/gessit-api/src/app/messages/create-message.dto.ts","webpack://gessit/./apps/gessit-api/src/app/messages/message.schema.ts","webpack://gessit/./apps/gessit-api/src/app/messages/messages.controller.ts","webpack://gessit/./apps/gessit-api/src/app/messages/messages.module.ts","webpack://gessit/./apps/gessit-api/src/app/messages/messages.service.ts","webpack://gessit/./apps/gessit-api/src/app/messages/update-message.dto.ts","webpack://gessit/./apps/gessit-api/src/app/shared/filters/validation.exception.ts","webpack://gessit/./apps/gessit-api/src/app/shared/filters/validation.filter.ts","webpack://gessit/./apps/gessit-api/src/app/shared/pipes/object.id.pipe.ts","webpack://gessit/./apps/gessit-api/src/app/themes/create-theme.dto.ts","webpack://gessit/./apps/gessit-api/src/app/themes/theme.schema.ts","webpack://gessit/./apps/gessit-api/src/app/themes/themes.controller.ts","webpack://gessit/./apps/gessit-api/src/app/themes/themes.module.ts","webpack://gessit/./apps/gessit-api/src/app/themes/themes.service.ts","webpack://gessit/./apps/gessit-api/src/app/threads/create-thread.dto.ts","webpack://gessit/./apps/gessit-api/src/app/threads/thread.schema.ts","webpack://gessit/./apps/gessit-api/src/app/threads/threads.controller.ts","webpack://gessit/./apps/gessit-api/src/app/threads/threads.module.ts","webpack://gessit/./apps/gessit-api/src/app/threads/threads.service.ts","webpack://gessit/./apps/gessit-api/src/app/threads/update-thread.dto.ts","webpack://gessit/./apps/gessit-api/src/app/users/create-user.dto.ts","webpack://gessit/./apps/gessit-api/src/app/users/role.enum.ts","webpack://gessit/./apps/gessit-api/src/app/users/update-user.dto.ts","webpack://gessit/./apps/gessit-api/src/app/users/user.schema.ts","webpack://gessit/./apps/gessit-api/src/app/users/users.controller.ts","webpack://gessit/./apps/gessit-api/src/app/users/users.module.ts","webpack://gessit/./apps/gessit-api/src/app/users/users.service.ts","webpack://gessit/external commonjs \"@nestjs/common\"","webpack://gessit/external commonjs \"@nestjs/core\"","webpack://gessit/external commonjs \"@nestjs/jwt\"","webpack://gessit/external commonjs \"@nestjs/mongoose\"","webpack://gessit/external commonjs \"@nestjs/passport\"","webpack://gessit/external commonjs \"bcrypt\"","webpack://gessit/external commonjs \"class-validator\"","webpack://gessit/external commonjs \"mongoose\"","webpack://gessit/external commonjs \"passport-jwt\"","webpack://gessit/external commonjs \"passport-local\"","webpack://gessit/external commonjs \"tslib\"","webpack://gessit/webpack/bootstrap","webpack://gessit/./apps/gessit-api/src/main.ts"],"sourcesContent":["import { Controller } from '@nestjs/common';\r\n\r\n@Controller()\r\nexport class AppController {}","import { SetMetadata } from '@nestjs/common';\r\nexport const IS_PUBLIC_KEY = 'isPublic';\r\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\r\n\r\nimport { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { CommunitiesModule } from './communities/communities.module';\r\nimport { ThreadsModule } from './threads/threads.module';\r\nimport { UsersModule } from './users/users.module';\r\nimport { APP_GUARD } from '@nestjs/core';\r\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\r\nimport { RolesGuard } from './auth/roles.guard';\r\nimport { ThemesModule } from './themes/themes.module';\r\nimport { MessagesModule } from './messages/messages.module';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forRoot('mongodb://127.0.0.1:27017/gessit'), CommunitiesModule, ThreadsModule, AuthModule, UsersModule, ThemesModule, MessagesModule],\r\n  controllers: [AppController],\r\n  providers: [\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: JwtAuthGuard\r\n    },\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: RolesGuard\r\n    },\r\n    AppService\r\n  ],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Welcome to gessit-api!' };\r\n  }\r\n}\r\n","import { Body, Controller, Get, Post, Request, UseGuards } from \"@nestjs/common\";\r\nimport { Public } from \"../app.module\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { LocalAuthGuard } from \"./local-auth.guard\";\r\nimport { CreateUserDto } from \"../users/create-user.dto\";\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n    constructor (private readonly authService: AuthService) {}\r\n\r\n    @Public()\r\n    @UseGuards(LocalAuthGuard)\r\n    @Post('login')\r\n    async login(@Request() req) {\r\n        return this.authService.login(req.body);\r\n    }\r\n\r\n    @Public()\r\n    @Post('register')\r\n    async register(@Body() user: CreateUserDto) {\r\n        return this.authService.register(user);\r\n    }\r\n    \r\n    @Get('profile')\r\n    getProfile(@Request() req) {\r\n        return req.user;\r\n    }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { LocalStrategy } from './local.strategy';\r\nimport { JwtStrategy } from './jwt.strategy';\r\nimport { UsersModule } from '../users/users.module';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { jwtConstants } from './constant';\r\nimport { AuthController } from './auth.controller';\r\n\r\n@Module({\r\n  imports: [\r\n    UsersModule,\r\n    PassportModule,\r\n    JwtModule.register({\r\n      secret: jwtConstants.secret,\r\n      signOptions: { expiresIn: '2d' },\r\n    }),\r\n  ],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n  exports: [AuthService],\r\n  controllers: [AuthController]\r\n})\r\nexport class AuthModule {}","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { UsersService } from '../users/users.service';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { CreateUserDto } from '../users/create-user.dto';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private jwtService: JwtService\r\n  ) {}\r\n\r\n  async validateUser(username: string, pass: string): Promise<any> {\r\n    const user = await this.usersService.getUserByUsername(username);\r\n\r\n    if (user) {\r\n      const result = await bcrypt.compare(pass, user.password);\r\n\r\n      if (result) {\r\n        const { password, ...result } = user;\r\n        return result;\r\n      }\r\n    }\r\n\r\n    throw new HttpException('Incorrect password or emailaddress', HttpStatus.BAD_REQUEST);\r\n  }\r\n\r\n  async login(user: any) {\r\n    const payload = { username: user.username, sub: user.userId };\r\n    return {\r\n      access_token: this.jwtService.sign(payload),\r\n    };\r\n  }\r\n\r\n  async register(user: CreateUserDto) {\r\n    const result = await this.usersService.createUser(user.username, user.birthDate, user.emailAddress, user.phoneNumber, user.password, user.image);\r\n    return await this.login(result);\r\n  }\r\n}","export const jwtConstants = {\r\n    secret: 'secretKey',\r\n};","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IS_PUBLIC_KEY } from '../app.module';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {\r\n  constructor(private reflector: Reflector) {\r\n    super();\r\n  }\r\n\r\n  canActivate(context: ExecutionContext) {\r\n    const isPublic = this.reflector.getAllAndOverride<boolean>(IS_PUBLIC_KEY, [\r\n      context.getHandler(),\r\n      context.getClass(),\r\n    ]);\r\n    if (isPublic) {\r\n      return true;\r\n    }\r\n    return super.canActivate(context);\r\n  }\r\n}\r\n","import { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { jwtConstants } from './constant';\r\nimport { UsersService } from '../users/users.service';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private usersService: UsersService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: jwtConstants.secret,\r\n    });\r\n  }\r\n\r\n  async validate(payload: any) {\r\n    const user = await this.usersService.getUserByUsername(payload.username);\r\n\r\n    if (user) {\r\n      return { id: user._id, username: user.username, roles: user.roles };\r\n    } else {\r\n      throw new HttpException('Login has expired', HttpStatus.UNAUTHORIZED);\r\n    }\r\n  }\r\n}","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class LocalAuthGuard extends AuthGuard('local') {}","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  async validate(username: string, password: string): Promise<any> {\r\n    const user = await this.authService.validateUser(username, password);\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n    return user;\r\n  }\r\n}","import { SetMetadata } from '@nestjs/common';\r\nimport { Role } from '../users/role.enum';\r\n\r\nexport const ROLES_KEY = 'roles';\r\nexport const Roles = (...roles: Role[]) => SetMetadata(ROLES_KEY, roles);","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { Role } from '../users/role.enum';\r\nimport { ROLES_KEY } from './roles.decorator';\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n  constructor(private reflector: Reflector) {}\r\n\r\n  canActivate(context: ExecutionContext): boolean {\r\n    const requiredRoles = this.reflector.getAllAndOverride<Role[]>(ROLES_KEY, [\r\n      context.getHandler(),\r\n      context.getClass(),\r\n    ]);\r\n    if (!requiredRoles) {\r\n      return true;\r\n    }\r\n    const { user } = context.switchToHttp().getRequest();\r\n    return requiredRoles.some((role) => user.roles?.includes(role));\r\n  }\r\n}","import { Body, Controller, Delete, Get, Param, Patch, Post, Req } from '@nestjs/common';\r\nimport { CommunitiesService } from './communities.service';\r\nimport { CreateCommunityDto } from './create-community.dto';\r\nimport { Community } from './community.schema';\r\nimport { UpdateCommunityDto } from './update-community.dto';\r\nimport { ObjectIdPipe } from '../shared/pipes/object.id.pipe';\r\n\r\n@Controller('community')\r\nexport class CommunitiesController {\r\n  constructor(private readonly communityService: CommunitiesService) {}\r\n\r\n  @Get()\r\n  async getCommunities(): Promise<Community[]> {\r\n    return await this.communityService.getCommunities();\r\n  }\r\n\r\n  @Get(':id')\r\n  async getCommunityById(@Param('id', ObjectIdPipe) id: string): Promise<Community> {\r\n    return await this.communityService.getCommunityById(id);\r\n  }\r\n\r\n  @Post()\r\n  async createCommunity(@Req() req, @Body() createCommunityDto: CreateCommunityDto): Promise<Community> {\r\n    return await this.communityService.createCommunity(req, createCommunityDto);\r\n  }\r\n\r\n  @Post(':id/join')\r\n  async joinCommunity(@Req() req, @Param('id', ObjectIdPipe) id: string): Promise<Community> {\r\n    return await this.communityService.joinCommunity(req, id);\r\n  }\r\n\r\n  @Post(':id/leave')\r\n  async leaveCommunity(@Req() req, @Param('id', ObjectIdPipe) id: string): Promise<Community> {\r\n    return await this.communityService.leaveCommunity(req, id);\r\n  }\r\n\r\n  @Patch(':id')\r\n  async updateCommunity(@Req() req, @Param('id', ObjectIdPipe) id: string, @Body() updateCommunityDto: UpdateCommunityDto): Promise<Community> {\r\n    return await this.communityService.updateCommunity(req, id, updateCommunityDto);\r\n  }\r\n\r\n  @Delete(':id')\r\n  async deleteCommunity(@Req() req, @Param('id', ObjectIdPipe) id: string): Promise<Community> {\r\n    return await this.communityService.deleteCommunity(req, id);\r\n  }\r\n}\r\n","import { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { forwardRef, Module } from \"@nestjs/common\";\r\nimport { Community, CommunitySchema } from \"./community.schema\";\r\nimport { CommunitiesController } from \"./communities.controller\";\r\nimport { CommunitiesService } from \"./communities.service\";\r\nimport { ThemesModule } from \"../themes/themes.module\";\r\nimport { UsersModule } from \"../users/users.module\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Community.name, schema: CommunitySchema }]), ThemesModule, forwardRef(() => UsersModule)],\r\n    controllers: [CommunitiesController],\r\n    providers: [CommunitiesService],\r\n    exports: [MongooseModule, CommunitiesService]\r\n})\r\n\r\nexport class CommunitiesModule {}","import { forwardRef, HttpException, HttpStatus, Inject, Injectable } from \"@nestjs/common\";\r\nimport { Community, CommunityDocument } from \"./community.schema\";\r\nimport { Model, Types } from \"mongoose\";\r\nimport { ThemesService } from \"../themes/themes.service\";\r\nimport { UsersService } from \"../users/users.service\";\r\nimport { UpdateCommunityDto } from \"./update-community.dto\";\r\nimport { Theme } from \"../themes/theme.schema\";\r\nimport { CreateCommunityDto } from \"./create-community.dto\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { ValidationException } from \"../shared/filters/validation.exception\";\r\nimport { ObjectIdPipe } from \"../shared/pipes/object.id.pipe\";\r\nimport { Role } from \"../users/role.enum\";\r\n\r\n@Injectable()\r\nexport class CommunitiesService {\r\n    constructor(@InjectModel(Community.name) private communityModel: Model<CommunityDocument>, private readonly themesService : ThemesService, @Inject(forwardRef(() => UsersService)) private readonly usersService : UsersService) {}\r\n\r\n    async getCommunityById(id: string): Promise<Community> {\r\n        await this.existing(id);\r\n        return this.communityModel.findOne({ _id: new Types.ObjectId(id) });\r\n    }\r\n\r\n    async getCommunities(): Promise<Community[]> {\r\n        return this.communityModel.find({});\r\n    }\r\n\r\n    async createCommunity(req, createCommunityDto: CreateCommunityDto): Promise<Community> {\r\n        if (createCommunityDto.themes) {\r\n            if (!(await this.areValidObjectIds(createCommunityDto.themes as string[]))) {\r\n                throw new ValidationException(['Themes attribute data must be of type ObjectId!'])\r\n            }\r\n        }\r\n\r\n        const themesArray = (await this.themesService.getThemes()).filter(p => createCommunityDto.themes.includes(p._id.toString()));\r\n\r\n        const mergedCommunity = new this.communityModel({\r\n            ...createCommunityDto,\r\n            _id: new Types.ObjectId(),\r\n            creationDate: new Date(),\r\n            ranking: 0,\r\n            themes: themesArray,\r\n            owner: await this.usersService.getUserById(req.user.id)\r\n        });\r\n        \r\n        return this.communityModel.create(mergedCommunity);\r\n    }\r\n\r\n    async joinCommunity(req, id: string): Promise<Community> {\r\n        await this.existing(id);\r\n\r\n        if ((await this.getCommunityById(id)).owner._id.equals(req.user.id)) {\r\n            throw new ValidationException(['Can not join your own created community!']);\r\n        }\r\n\r\n        if ((await this.getCommunityById(id)).members.filter(p => p._id.equals(req.user.id)).length > 0) {\r\n            throw new ValidationException(['Already part of this community!']);\r\n        }\r\n\r\n        return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(id)}, {$push: {members: (await this.usersService.getUserById(req.user.id))._id}});\r\n    }\r\n\r\n    async leaveCommunity(req, id: string): Promise<Community> {\r\n        await this.existing(id);\r\n\r\n        if ((await this.getCommunityById(id)).owner._id.equals(req.user.id)) {\r\n            throw new ValidationException(['Can not leave your own created community!']);\r\n        }\r\n\r\n        if ((await this.getCommunityById(id)).members.filter(p => p._id.equals(req.user.id)).length === 0) {\r\n            throw new ValidationException(['Not part of this community!']);\r\n        }\r\n\r\n        return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(id)}, {$pull: {members: (await this.usersService.getUserById(req.user.id))._id}});\r\n    }\r\n\r\n    async updateCommunity(req, id: string, updateCommunityDto: UpdateCommunityDto): Promise<Community> {\r\n        if (updateCommunityDto.themes) {\r\n            if (!(await this.areValidObjectIds(updateCommunityDto.themes as string[]))) {\r\n                throw new ValidationException(['Themes attribute data must be of type ObjectId!'])\r\n            }\r\n        }\r\n\r\n        await this.existing(id);\r\n\r\n        if ((await this.getCommunityById(id)).owner._id.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n            let updatedObject = {};\r\n\r\n            if (updateCommunityDto.themes) {\r\n                const themes : Theme[] = [];\r\n    \r\n                for (const theme of updateCommunityDto.themes) {\r\n                    themes.push(await this.themesService.getThemeById(theme));\r\n                }\r\n    \r\n                delete updateCommunityDto.themes;\r\n    \r\n                updatedObject = { themes };\r\n            }\r\n    \r\n            updatedObject = { ...updateCommunityDto, ...updatedObject };\r\n    \r\n            return this.communityModel.findOneAndUpdate({ _id: new Types.ObjectId(id) }, updatedObject);\r\n        } else {\r\n            throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n        }\r\n    }\r\n\r\n    async deleteCommunity(req, id: string): Promise<Community> {\r\n        await this.existing(id);\r\n\r\n        if ((await this.getCommunityById(id)).owner._id.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n            return this.communityModel.findOneAndDelete({ _id: new Types.ObjectId(id) });\r\n        } else {\r\n            throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n        }\r\n    }\r\n\r\n    async areValidObjectIds(value: string[]) {\r\n        return value.every((id) => ObjectIdPipe.isValidObjectId(id));\r\n    }\r\n\r\n    async existing(communityId: string): Promise<void> {\r\n        const community = await this.communityModel.findOne({ _id: new Types.ObjectId(communityId) });\r\n\r\n        if (!community) {\r\n            throw new ValidationException([`Community with id ${communityId} does not exist!`])\r\n        }\r\n    }\r\n}\r\n","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { Document, Types } from \"mongoose\";\r\nimport { Theme } from \"../themes/theme.schema\";\r\nimport { Thread } from \"../threads/thread.schema\";\r\nimport { User } from \"../users/user.schema\";\r\n\r\nexport type CommunityDocument = Community & Document;\r\n\r\n@Schema()\r\nexport class Community {\r\n    @Prop()\r\n    _id: Types.ObjectId;\r\n\r\n    @Prop()\r\n    name: string;\r\n\r\n    @Prop()\r\n    description: string;\r\n\r\n    @Prop()\r\n    ranking: Number;\r\n\r\n    @Prop()\r\n    creationDate: Date;\r\n\r\n    @Prop()\r\n    image: string;\r\n\r\n    @Prop()\r\n    isOpen: boolean;\r\n\r\n    @Prop({\r\n        default: []\r\n    })\r\n    themes: Theme[]\r\n\r\n    @Prop({\r\n        default: []\r\n    })\r\n    threads: [Thread]\r\n\r\n    @Prop({\r\n        default: [],\r\n        ref: 'User'\r\n    })\r\n    members: [Types.ObjectId]\r\n\r\n    @Prop()\r\n    owner: User\r\n}\r\n\r\nexport const CommunitySchema = SchemaFactory.createForClass(Community);","import {\r\n    IsString,\r\n    IsNotEmpty,\r\n    IsDefined,\r\n    IsBoolean\r\n} from 'class-validator';\r\n\r\nexport class CreateCommunityDto {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    name: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    description: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    image: string;\r\n\r\n    @IsBoolean()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    isOpen: boolean;\r\n\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    themes: string[]\r\n}","import {\r\n    IsString,\r\n    IsBoolean,\r\n    IsOptional\r\n} from 'class-validator';\r\nimport { Thread } from '../threads/thread.schema';\r\n\r\nexport class UpdateCommunityDto {\r\n    @IsString()\r\n    @IsOptional()\r\n    name: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    description: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    image: string;\r\n\r\n    @IsBoolean()\r\n    @IsOptional()\r\n    isOpen: boolean;\r\n\r\n    @IsOptional()\r\n    themes: string[];\r\n\r\n    @IsOptional()\r\n    threads: Thread[];\r\n}","import {\r\n    IsString\r\n} from 'class-validator';\r\n\r\nexport class CreateMessageDto {\r\n    @IsString()\r\n    content: string;\r\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { Document, Types } from \"mongoose\";\r\n\r\nexport type MessageDocument = Message & Document;\r\n\r\n@Schema()\r\nexport class Message {\r\n    @Prop()\r\n    _id: Types.ObjectId;\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    creator: Types.ObjectId;\r\n\r\n    @Prop()\r\n    content: string;\r\n    \r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    likes: [Types.ObjectId];\r\n\r\n    @Prop()\r\n    creationDate: Date;\r\n\r\n    @Prop()\r\n    hasLikes: boolean;\r\n}\r\n\r\nexport const MessageSchema = SchemaFactory.createForClass(Message);","import { Body, Controller, Delete, Get, Param, Patch, Post, Req } from \"@nestjs/common\";\r\nimport { ObjectIdPipe } from \"../shared/pipes/object.id.pipe\";\r\nimport { CreateMessageDto } from \"./create-message.dto\";\r\nimport { Message } from \"./message.schema\";\r\nimport { MessagesService } from \"./messages.service\";\r\nimport { UpdateMessageDto } from \"./update-message.dto\";\r\n\r\n@Controller('community')\r\nexport class MessagesController {\r\n    constructor(private readonly messagesService: MessagesService) {}\r\n\r\n    @Get(':communityId/thread/:threadId/message')\r\n    async getMessages(\r\n        @Param('communityId', ObjectIdPipe) communityId: string,\r\n        @Param('threadId', ObjectIdPipe) threadId: string): Promise<Message[]> {\r\n        return await this.messagesService.getMessages(communityId, threadId);\r\n    }\r\n\r\n    @Get(':communityId/thread/:threadId/message/:messageId')\r\n    async getMessageById(\r\n        @Param('communityId', ObjectIdPipe) communityId: string, \r\n        @Param('threadId', ObjectIdPipe) threadId: string, \r\n        @Param('messageId', ObjectIdPipe) messageId: string): Promise<Message> {\r\n        return await this.messagesService.getMessageById(communityId, threadId, messageId);\r\n    }\r\n\r\n    @Post(':communityId/thread/:threadId/message')\r\n    async createMessage(\r\n        @Req() req, \r\n        @Param('communityId', ObjectIdPipe) communityId: string, \r\n        @Param('threadId', ObjectIdPipe) threadId: string, \r\n        @Body() createMessageDto: CreateMessageDto): Promise<Message> {\r\n        return await this.messagesService.createMessage(req, communityId, threadId, createMessageDto);\r\n    }\r\n\r\n    @Post(':communityId/thread/:threadId/message/:messageId/like')\r\n    async likeMessage(\r\n        @Req() req,\r\n        @Param('communityId', ObjectIdPipe) communityId: string, \r\n        @Param('threadId', ObjectIdPipe) threadId: string, \r\n        @Param('messageId', ObjectIdPipe) messageId: string): Promise<Message> {\r\n        return await this.messagesService.likeMessage(req, communityId, threadId, messageId);\r\n    }\r\n\r\n    @Patch(':communityId/thread/:threadId/message/:messageId')\r\n    async updateMessage(\r\n        @Req() req,\r\n        @Param('communityId', ObjectIdPipe) communityId: string, \r\n        @Param('threadId', ObjectIdPipe) threadId: string, \r\n        @Param('messageId', ObjectIdPipe) messageId: string,\r\n        @Body() updateMessageDto: UpdateMessageDto): Promise<Message> {\r\n        return await this.messagesService.updateMessage(req, communityId, threadId, messageId, updateMessageDto);\r\n    }\r\n\r\n    @Delete(':communityId/thread/:threadId/message/:messageId')\r\n    async deleteMessage(\r\n        @Req() req, \r\n        @Param('communityId', ObjectIdPipe) communityId: string, \r\n        @Param('threadId', ObjectIdPipe) threadId: string, \r\n        @Param('messageId', ObjectIdPipe) messageId: string) {\r\n        return await this.messagesService.deleteMessage(req, communityId, threadId, messageId);\r\n    }\r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { CommunitiesModule } from '../communities/communities.module';\r\nimport { Message, MessageSchema } from './message.schema';\r\nimport { MessagesController } from './messages.controller';\r\nimport { MessagesService } from './messages.service';\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Message.name, schema: MessageSchema }]), CommunitiesModule],\r\n    controllers: [MessagesController],\r\n    providers: [MessagesService]\r\n})\r\n\r\nexport class MessagesModule {}\r\n","import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Model, Types } from \"mongoose\";\r\nimport { Community, CommunityDocument } from \"../communities/community.schema\";\r\nimport { ValidationException } from \"../shared/filters/validation.exception\";\r\nimport { Role } from \"../users/role.enum\";\r\nimport { CreateMessageDto } from \"./create-message.dto\";\r\nimport { Message, MessageDocument } from \"./message.schema\";\r\n\r\n@Injectable()\r\nexport class MessagesService {\r\n    constructor(@InjectModel(Community.name) private communityModel: Model<CommunityDocument>, @InjectModel(Message.name) private messageModel: Model<MessageDocument>) {}\r\n\r\n    async getMessageById(communityId: string, threadId: string, messageId: string): Promise<Message> {\r\n        await this.existing(communityId, threadId, messageId);\r\n\r\n        const community = await this.communityModel.findOne({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId), \"messages._id\": new Types.ObjectId(messageId)});\r\n        return community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0].messages.filter(p => p._id.equals(new Types.ObjectId(messageId)))[0];\r\n    }\r\n\r\n    async getMessages(communityId: string, threadId: string): Promise<Message[]> {\r\n        await this.existing(communityId, threadId);\r\n\r\n        const community = await this.communityModel.findOne({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)});\r\n        return community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0].messages;\r\n    }\r\n\r\n    async createMessage(req, communityId: string, threadId: string, createMessageDto: CreateMessageDto): Promise<Message> {\r\n        await this.existing(communityId, threadId);\r\n\r\n        const currentCommunity = await this.communityModel.findOne({_id: new Types.ObjectId(communityId)});\r\n\r\n        if (currentCommunity.members.filter(p => p._id.equals(req.user.id)).length === 0) {\r\n            if (currentCommunity.owner._id.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n                const id = new Types.ObjectId();\r\n                const newMessage = new this.messageModel({\r\n                    _id: id,\r\n                    creator: req.user.id,\r\n                    ...createMessageDto,\r\n                    likes: [],\r\n                    creationDate: new Date(),\r\n                    hasLikes: false\r\n                });\r\n        \r\n                const community = await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$push: {\"threads.$.messages\": newMessage}}, {new: true});\r\n                return community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0].messages.filter(p => p._id.equals(id))[0];\r\n            } else {\r\n                throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n            }\r\n        } else {\r\n            const id = new Types.ObjectId();\r\n            const newMessage = new this.messageModel({\r\n                _id: id,\r\n                creator: req.user.id,\r\n                ...createMessageDto,\r\n                likes: [],\r\n                creationDate: new Date(),\r\n                hasLikes: false\r\n            });\r\n\r\n            const community = await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$push: {\"threads.$.messages\": newMessage}}, {new: true});\r\n            return community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0].messages.filter(p => p._id.equals(id))[0];\r\n        }\r\n    }\r\n\r\n    async likeMessage(req, communityId: string, threadId: string, messageId: string): Promise<Message> {\r\n        await this.existing(communityId, threadId, messageId);\r\n\r\n        const message = await this.getMessageById(communityId, threadId, messageId);\r\n\r\n        let result;\r\n\r\n        if (message.likes.filter(p => p.equals(req.user.id)).length === 0) {\r\n            result = (await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$push: {\"threads.$.messages.$[message].likes\": req.user.id}}, {arrayFilters: [{ \"message._id\": new Types.ObjectId(messageId) }], new: true}));\r\n        } else {\r\n            result = (await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$pull: {\"threads.$.messages.$[message].likes\": req.user.id}}, {arrayFilters: [{ \"message._id\": new Types.ObjectId(messageId) }], new: true}));\r\n        }\r\n\r\n        if ((result.threads.filter(p => p._id.equals(new Types.ObjectId(threadId))))[0].messages.filter(p => p._id.equals(new Types.ObjectId(messageId)))[0].likes.length > 0) {\r\n            result = (await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$set: {\"threads.$.messages.$[message].hasLikes\": true}}, {arrayFilters: [{ \"message._id\": new Types.ObjectId(messageId) }], new: true}));\r\n        } else {\r\n            result = (await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$set: {\"threads.$.messages.$[message].hasLikes\": false}}, {arrayFilters: [{ \"message._id\": new Types.ObjectId(messageId) }], new: true}));\r\n        }\r\n\r\n        return result.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0].messages.filter(p => p._id.equals(new Types.ObjectId(messageId)))[0];\r\n    }\r\n\r\n    async updateMessage(req, communityId: string, threadId: string, messageId: string, message: Partial<Message>): Promise<Message> {\r\n        await this.existing(communityId, threadId, messageId);\r\n\r\n        const community = await this.communityModel.findOne({_id: new Types.ObjectId(communityId)});\r\n        const resultMessage = community.threads.filter(p => p._id.equals(threadId))[0].messages.filter(p => p._id.equals(messageId))[0];\r\n\r\n        if (resultMessage.creator._id.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n            const oldMessage = await this.getMessageById(communityId, threadId, messageId);\r\n            const newMessage = { ...oldMessage, ...message };\r\n    \r\n            await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$pull: {\"threads.$.messages\": oldMessage}});\r\n            return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$push: {\"threads.$.messages\": newMessage}}, {new: true});\r\n        } else {\r\n            throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n        }\r\n    }\r\n\r\n    async deleteMessage(req, communityId: string, threadId: string, messageId: string): Promise<Message> {\r\n        await this.existing(communityId, threadId, messageId);\r\n\r\n        const community = await this.communityModel.findOne({_id: new Types.ObjectId(communityId)});\r\n        const resultMessage = community.threads.filter(p => p._id.equals(threadId))[0].messages.filter(p => p._id.equals(messageId))[0];\r\n\r\n        if (resultMessage.creator._id.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n            const message = await this.getMessageById(communityId, threadId, messageId);\r\n            return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$pull: {\"threads.$.messages\": message }}, {new: true});\r\n        } else {\r\n            throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n        }\r\n    }\r\n\r\n    async existing(communityId: string, threadId?: string, messageId?: string): Promise<void> {\r\n        const community = await this.communityModel.findOne({ _id: new Types.ObjectId(communityId) });\r\n\r\n        if (!community) {\r\n            throw new ValidationException([`Community with id ${communityId} does not exist!`]);\r\n        }\r\n\r\n        if(threadId) {\r\n            if(!(community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId))).length > 0)) {\r\n                throw new ValidationException([`Thread with id ${threadId} doesn't exist in the community with id ${communityId}!`]);\r\n            }\r\n        }\r\n\r\n        if (messageId) {\r\n            if (!(community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0].messages.filter(p => p._id.equals(new Types.ObjectId(messageId))).length > 0)) {\r\n                throw new ValidationException([`Message with id ${messageId} doesn't exist in the thread with id ${threadId} in the community with id ${communityId}!`]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    IsOptional,\r\n    IsString\r\n} from 'class-validator';\r\n\r\nexport class UpdateMessageDto {\r\n    @IsString()\r\n    @IsOptional()\r\n    content: string;\r\n}","import { BadRequestException } from \"@nestjs/common\";\r\n\r\nexport class ValidationException extends BadRequestException {\r\n    constructor(public validationErrors: string[]) {\r\n        super();\r\n    }\r\n}","import { ArgumentsHost, Catch, ExceptionFilter } from \"@nestjs/common\";\r\nimport { ValidationException } from \"./validation.exception\";\r\n\r\n@Catch(ValidationException)\r\nexport class ValidationFilter implements ExceptionFilter {\r\n    catch (exception: ValidationException, host: ArgumentsHost): any {\r\n        const ctx = host.switchToHttp(),\r\n        response = ctx.getResponse();\r\n\r\n        return response.status(400).json({\r\n            statusCode: 400,\r\n            timeStamp: new Date(),\r\n            createdBy: \"ValidationFilter\",\r\n            validationErrors: exception.validationErrors\r\n        });\r\n    }\r\n}","import { PipeTransform } from \"@nestjs/common\";\r\nimport { ValidationException } from \"../filters/validation.exception\";\r\nvar ObjectId = require('mongoose').Types.ObjectId;\r\n\r\nexport class ObjectIdPipe implements PipeTransform<string> {\r\n    transform(value: string): string {\r\n        if (!ObjectId.isValid(value)) {\r\n            throw new ValidationException([`ObjectId has wrong value: ${value}, ObjectId is not valid!`]);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    public static isValidObjectId(value: any): boolean {\r\n        try {\r\n            ObjectId.createFromHexString(value);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n}","import {\r\n    IsDefined,\r\n    IsNotEmpty,\r\n    IsString\r\n} from 'class-validator';\r\n\r\nexport class CreateThemeDto {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    name: string;\r\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { Document, Types } from \"mongoose\";\r\n\r\nexport type ThemeDocument = Theme & Document;\r\n\r\n@Schema()\r\nexport class Theme {\r\n    @Prop()\r\n    _id: Types.ObjectId;\r\n\r\n    @Prop()\r\n    name: string; \r\n}\r\n\r\nexport const ThemeSchema = SchemaFactory.createForClass(Theme);","import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\r\nimport { Roles } from '../auth/roles.decorator';\r\nimport { ObjectIdPipe } from '../shared/pipes/object.id.pipe';\r\nimport { Role } from '../users/role.enum';\r\nimport { CreateThemeDto } from './create-theme.dto';\r\nimport { Theme } from './theme.schema';\r\nimport { ThemesService } from './themes.service';\r\n\r\n@Controller('theme')\r\nexport class ThemesController {\r\n  constructor(private readonly themeService: ThemesService) {}\r\n\r\n  @Get()\r\n  async getThemes(): Promise<Theme[]> {\r\n    return await this.themeService.getThemes();\r\n  }\r\n\r\n  @Get(':id')\r\n  async getThemeById(@Param('id', ObjectIdPipe) id: string): Promise<Theme> {\r\n    return await this.themeService.getThemeById(id);\r\n  }\r\n\r\n  @Roles(Role.Admin)\r\n  @Post()\r\n  async createTheme(@Body() createThemeDto: CreateThemeDto): Promise<Theme> {\r\n    return await this.themeService.createTheme(createThemeDto.name);\r\n  }\r\n\r\n  @Roles(Role.Admin)\r\n  @Delete(':id')\r\n  async deleteTheme(@Param('id', ObjectIdPipe) id: string): Promise<Theme> {\r\n    return await this.themeService.deleteTheme(id);\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Theme, ThemeSchema } from './theme.schema';\r\nimport { ThemesController } from './themes.controller';\r\nimport { ThemesService } from './themes.service';\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Theme.name, schema: ThemeSchema }])],\r\n    controllers: [ThemesController],\r\n    providers: [ThemesService],\r\n    exports: [ThemesService]\r\n})\r\n\r\nexport class ThemesModule {}\r\n","import { Injectable } from \"@nestjs/common\";\r\nimport { Model, Types } from \"mongoose\";\r\nimport { Theme, ThemeDocument } from \"./theme.schema\";\r\nimport { ValidationException } from \"../shared/filters/validation.exception\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\n\r\n@Injectable()\r\nexport class ThemesService {\r\n    constructor(@InjectModel(Theme.name) private themeModel: Model<ThemeDocument>) {}\r\n\r\n    async getThemeById(id: string): Promise<Theme> {\r\n        await this.existing(id);\r\n        return this.themeModel.findOne({ _id: new Types.ObjectId(id) });\r\n    }\r\n\r\n    async getThemes(): Promise<Theme[]> {\r\n        return this.themeModel.find({});\r\n    }\r\n\r\n    async createTheme(name: string): Promise<Theme> {\r\n        if ((await this.getThemes()).filter(p => p.name === name).length > 0) {\r\n            throw new ValidationException(['A Theme with this name already exists!'])\r\n        }\r\n\r\n        const newTheme = new this.themeModel({\r\n            _id: new Types.ObjectId(),\r\n            name\r\n        })\r\n\r\n        return newTheme.save();\r\n    }\r\n\r\n    async deleteTheme(id: string): Promise<Theme> {\r\n        await this.existing(id);\r\n        return this.themeModel.findOneAndDelete({ _id: new Types.ObjectId(id) });\r\n    }\r\n\r\n    async existing(themeId: string): Promise<void> {\r\n        const theme = await this.themeModel.findOne({ _id: new Types.ObjectId(themeId) });\r\n\r\n        if (!theme) {\r\n            throw new ValidationException([`Theme with id ${themeId} does not exist!`]);\r\n        }\r\n    }\r\n}","import {\r\n    IsString\r\n} from 'class-validator';\r\n\r\nexport class CreateThreadDto {\r\n    @IsString()\r\n    title: string;\r\n\r\n    @IsString()\r\n    content: string;\r\n\r\n    @IsString()\r\n    image: string;\r\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { Document, Types } from \"mongoose\";\r\nimport { Message } from \"../messages/message.schema\";\r\n\r\nexport type ThreadDocument = Thread & Document;\r\n\r\n@Schema()\r\nexport class Thread {\r\n    @Prop()\r\n    _id: Types.ObjectId;\r\n\r\n    @Prop()\r\n    title: string;\r\n\r\n    @Prop()\r\n    content: string;\r\n\r\n    @Prop()\r\n    views: number;\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    likes: [Types.ObjectId];\r\n\r\n    @Prop()\r\n    creationDate: Date;\r\n\r\n    @Prop()\r\n    image: string;\r\n\r\n    @Prop({\r\n        default: []\r\n    })\r\n    messages: [Message]\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    creator: Types.ObjectId;\r\n}\r\n\r\nexport const ThreadSchema = SchemaFactory.createForClass(Thread);","import { Body, Controller, Delete, Get, Param, Patch, Post, Req } from '@nestjs/common';\r\nimport { ThreadsService } from './threads.service';\r\nimport { Thread } from './thread.schema';\r\nimport { UpdateThreadDto } from './update-thread.dto';\r\nimport { CreateThreadDto } from './create-thread.dto';\r\nimport { Public } from '../app.module';\r\nimport { ObjectIdPipe } from '../shared/pipes/object.id.pipe';\r\n\r\n@Controller('community')\r\nexport class ThreadsController {\r\n  constructor(private readonly threadService: ThreadsService) {}\r\n\r\n  @Public()\r\n  @Get(':communityId/thread')\r\n  async getThreads(@Param('communityId', ObjectIdPipe) communityId: string): Promise<Thread[]> {\r\n    return await this.threadService.getThreads(communityId);\r\n  }\r\n\r\n  @Public()\r\n  @Get(':communityId/thread/:threadId')\r\n  async getThreadById(@Param('communityId', ObjectIdPipe) communityId: string, @Param('threadId', ObjectIdPipe) threadId: string): Promise<Thread> {\r\n    return await this.threadService.getThreadById(communityId, threadId);\r\n  }\r\n\r\n  @Post(':communityId/thread')\r\n  async createThread(@Req() req, @Body() createThreadDto: CreateThreadDto, @Param('communityId', ObjectIdPipe) communityId: string): Promise<Thread> {\r\n    return await this.threadService.createThread(req, communityId, createThreadDto);\r\n  }\r\n\r\n  @Post(':communityId/thread/:threadId/like')\r\n  async likeThread(@Req() req, @Param('communityId', ObjectIdPipe) communityId: string, @Param('threadId', ObjectIdPipe) threadId: string) {\r\n    return await this.threadService.likeThread(req, communityId, threadId);\r\n  }\r\n\r\n  @Post(':communityId/thread/:threadId/view')\r\n  async viewThread(@Param('communityId', ObjectIdPipe) communityId: string, @Param('threadId', ObjectIdPipe) threadId: string) {\r\n    return await this.threadService.viewThread(communityId, threadId);\r\n  }\r\n\r\n  @Patch(':communityId/thread/:threadId')\r\n  async updateThread(@Req() req, @Param('communityId', ObjectIdPipe) communityId: string, @Param('threadId', ObjectIdPipe) threadId: string, @Body() updateThreadDto: UpdateThreadDto): Promise<Thread> {\r\n    return await this.threadService.updateThread(req, communityId, threadId, updateThreadDto);\r\n  }\r\n\r\n  @Delete(':communityId/thread/:threadId')\r\n  async deleteThread(@Req() req, @Param('communityId', ObjectIdPipe) communityId: string, @Param('threadId', ObjectIdPipe) threadId: string): Promise<Thread> {\r\n    return await this.threadService.deleteThread(req, communityId, threadId);\r\n  }\r\n}\r\n","import { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { Module } from \"@nestjs/common\";\r\nimport { Thread, ThreadSchema } from \"./thread.schema\";\r\nimport { ThreadsController } from \"./threads.controller\";\r\nimport { ThreadsService } from \"./threads.service\";\r\nimport { UsersModule } from \"../users/users.module\";\r\nimport { CommunitiesModule } from \"../communities/communities.module\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{ name: Thread.name, schema: ThreadSchema }]), UsersModule, CommunitiesModule],\r\n    controllers: [ThreadsController],\r\n    providers: [ThreadsService]\r\n})\r\n\r\nexport class ThreadsModule {}","import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\r\nimport { Model, Types } from \"mongoose\";\r\nimport { Thread, ThreadDocument } from \"./thread.schema\";\r\nimport { UsersService } from \"../users/users.service\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { Community, CommunityDocument } from \"../communities/community.schema\";\r\nimport { CommunitiesService } from \"../communities/communities.service\";\r\nimport { CreateThreadDto } from \"./create-thread.dto\";\r\nimport { ValidationException } from \"../shared/filters/validation.exception\";\r\nimport { Role } from \"../users/role.enum\";\r\n\r\n@Injectable()\r\nexport class ThreadsService {\r\n    constructor(@InjectModel(Community.name) private communityModel: Model<CommunityDocument>, @InjectModel(Thread.name) private threadModel: Model<ThreadDocument>, private readonly usersService: UsersService, private readonly communitiesService: CommunitiesService) {}\r\n\r\n    async getThreadById(communityId: string, threadId: string): Promise<Thread> {\r\n        //await this.existing(communityId, threadId);\r\n        //return (await this.communitiesService.getCommunityById(communityId)).threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0];\r\n\r\n        return (await this.communityModel.aggregate([\r\n            { $match : { _id : new Types.ObjectId(communityId)}},\r\n            { $match : { \"threads._id\" : new Types.ObjectId(threadId)}},\r\n            { $project : {\r\n                _id : 0,\r\n                \"threads\" : {\r\n                    $filter : {\r\n                        input : \"$threads\",\r\n                        as : \"thread\",\r\n                        cond : { $eq : [\"$$thread._id\", new Types.ObjectId(threadId)]}\r\n                    }\r\n                }}\r\n            },\r\n            { $unwind : { path: \"$threads\", preserveNullAndEmptyArrays: true }},\r\n            { $lookup : { \r\n                from : \"users\",\r\n                localField : \"threads.creator\",\r\n                foreignField : \"_id\",\r\n                as : \"threads.creator\"\r\n            }},\r\n            { $unwind : { path: \"$threads.messages\", preserveNullAndEmptyArrays: true }},\r\n            { $unwind : { path: \"$threads.messages.creator\", preserveNullAndEmptyArrays: true }},\r\n            { $lookup : {\r\n                from : \"users\",\r\n                localField : \"threads.messages.creator\",\r\n                foreignField : \"_id\",\r\n                as : \"threads.messages.creator\"\r\n             }},\r\n             { $unset: [\r\n                \"threads.creator.password\",\r\n                \"threads.creator.__v\",\r\n                \"threads.messages.creator.password\",\r\n                \"threads.messages.creator.__v\",\r\n            ]},\r\n        ]))[0];\r\n    }\r\n\r\n    async getThreads(communityId: string): Promise<Thread[]> {\r\n        //await this.existing(communityId);\r\n        //return (await this.communitiesService.getCommunityById(communityId)).threads;\r\n\r\n        return (await this.communityModel.aggregate([\r\n            { $match : { _id : new Types.ObjectId(communityId)}},\r\n            { $project : {\r\n                _id : 0,\r\n                \"threads\" : {\r\n                    $filter : {\r\n                        input : \"$threads\",\r\n                        as : \"thread\",\r\n                        cond : true\r\n                    }\r\n                }}\r\n            },\r\n            { $unwind : { path: \"$threads\", preserveNullAndEmptyArrays: true }},\r\n            { $lookup : { \r\n                from : \"users\",\r\n                localField : \"threads.creator\",\r\n                foreignField : \"_id\",\r\n                as : \"threads.creator\"\r\n            }},\r\n            { $unwind : { path: \"$threads.messages\", preserveNullAndEmptyArrays: true }},\r\n            { $unwind : { path: \"$threads.messages.creator\", preserveNullAndEmptyArrays: true }},\r\n            { $lookup : {\r\n                from : \"users\",\r\n                localField : \"threads.messages.creator\",\r\n                foreignField : \"_id\",\r\n                as : \"threads.messages.creator\"\r\n             }},\r\n             { $unset: [\r\n                \"threads.creator.password\",\r\n                \"threads.creator.__v\",\r\n                \"threads.messages.creator.password\",\r\n                \"threads.messages.creator.__v\",\r\n            ]},\r\n        ])).map(thread => thread.threads);\r\n    }\r\n\r\n    async createThread(req, communityId: string, createThreadDto: CreateThreadDto): Promise<Thread> {\r\n        await this.existing(communityId);\r\n\r\n        if ((await this.communitiesService.getCommunityById(communityId)).members.filter(p => p._id.equals(req.user.id)).length === 0) {\r\n            if ((await this.communitiesService.getCommunityById(communityId)).owner._id.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n                const newThread = new this.threadModel({\r\n                    ...createThreadDto,\r\n                    _id: new Types.ObjectId(),\r\n                    views: 0,\r\n                    creationDate: new Date(),\r\n                    creator: req.user.id\r\n                });\r\n        \r\n                return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId)}, {$push: {threads: newThread}});\r\n            } else {\r\n                throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n            }\r\n        } else {\r\n            const newThread = new this.threadModel({\r\n                ...createThreadDto,\r\n                _id: new Types.ObjectId(),\r\n                views: 0,\r\n                creationDate: new Date(),\r\n                creator: req.user.id\r\n            });\r\n    \r\n            return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId)}, {$push: {threads: newThread}});\r\n        }\r\n    }\r\n\r\n    async likeThread(req, communityId: string, threadId: string): Promise<Thread> {\r\n        await this.existing(communityId, threadId);\r\n\r\n        let community;\r\n\r\n        if ((await this.communityModel.find({ $and: [{_id: new Types.ObjectId(communityId)}, {threads: {$elemMatch: {_id: new Types.ObjectId(threadId), likes: {$in: [req.user.id]}}}}]})).length === 0) {\r\n            community = await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$push: {\"threads.$.likes\": req.user.id}}, {new: true});\r\n        } else {\r\n            community = await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId), \"threads._id\": new Types.ObjectId(threadId)}, {$pull: {\"threads.$.likes\": req.user.id}}, {new: true});\r\n        }\r\n        \r\n        return community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0];\r\n    }\r\n\r\n    async viewThread(communityId: string, threadId: string): Promise<Thread> {\r\n        await this.existing(communityId, threadId);\r\n\r\n        let community = await this.communityModel.findOneAndUpdate({_id : new Types.ObjectId(communityId), \"threads._id\" : new Types.ObjectId(threadId)}, {$inc: {\"threads.$.views\" : 1}});\r\n        return community.threads.filter(p => p._id.equals(new Types.ObjectId(threadId)))[0];\r\n    }\r\n\r\n    async updateThread(req, communityId: string, threadId: string, thread: Partial<Thread>): Promise<Thread> {\r\n        await this.existing(communityId, threadId);\r\n\r\n        if ((await this.getThreadById(communityId, threadId)).creator.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n            const oldThread = await this.getThreadById(communityId, threadId);\r\n            const newThread = { ...oldThread, ...thread };\r\n    \r\n            await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId)}, {$pull: {threads: oldThread}});\r\n            return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId)}, {$push: {threads: newThread}});\r\n        } else {\r\n            throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n        }\r\n    }\r\n\r\n    async deleteThread(req, communityId: string, threadId: string): Promise<Thread> {\r\n        await this.existing(communityId, threadId);\r\n\r\n        if ((await this.getThreadById(communityId, threadId)).creator.equals(req.user.id) || req.user.roles.includes(Role.Admin)) {\r\n            const thread = await this.getThreadById(communityId, threadId);\r\n            return await this.communityModel.findOneAndUpdate({_id: new Types.ObjectId(communityId)}, {$pull: {threads: thread}});\r\n        } else {\r\n            throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n        }\r\n    }\r\n\r\n    async existing(communityId : string, threadId? : string) : Promise<void> {\r\n        const community = await this.communityModel.findOne({ _id : new Types.ObjectId(communityId) });\r\n\r\n        if(!community) {\r\n            throw new ValidationException([`Community with id ${communityId} does not exist!`]);\r\n        }\r\n\r\n        if(threadId) {\r\n            if(!(community.threads.filter(thread => thread._id.equals(new Types.ObjectId(threadId))).length > 0)) {\r\n                throw new ValidationException([`Thread with id ${threadId} doesn't exist in the community with id ${communityId}!`]);\r\n            }\r\n        }\r\n    }\r\n}","import {\r\n    IsString,\r\n    IsOptional\r\n} from 'class-validator';\r\n\r\nexport class UpdateThreadDto {\r\n    @IsString()\r\n    @IsOptional()\r\n    title: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    content: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    image: string;\r\n}","import {\r\n    IsDefined,\r\n    IsNotEmpty,\r\n    IsString,\r\n    Matches\r\n} from 'class-validator';\r\n\r\nexport class CreateUserDto {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    username: string;\r\n\r\n    @Matches(/^\\d{4}[./-]\\d{2}[./-]\\d{2}$/)\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    birthDate: Date;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    emailAddress: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    phoneNumber: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    @IsDefined()\r\n    password: string;\r\n\r\n    @IsString()\r\n    image: string;\r\n}","export enum Role {\r\n    User = 'user',\r\n    Admin = 'admin',\r\n}","import {\r\n    IsOptional,\r\n    IsString,\r\n    Matches\r\n} from 'class-validator';\r\n\r\nexport class UpdateUserDto {\r\n    @IsString()\r\n    @IsOptional()\r\n    username: string;\r\n\r\n    @Matches(/^\\d{4}[./-]\\d{2}[./-]\\d{2}$/)\r\n    @IsOptional()\r\n    birthDate: Date;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    emailAddress: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    phoneNumber: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    password: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    image: string;\r\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\r\nimport { Document, Types, Schema as MongooseSchema } from \"mongoose\";\r\nimport { Role } from \"./role.enum\";\r\n\r\nexport type UserDocument = User & Document;\r\n\r\n@Schema()\r\nexport class User {\r\n    @Prop()\r\n    _id: Types.ObjectId;\r\n\r\n    @Prop({\r\n        unique: true\r\n    })\r\n    username: string;\r\n\r\n    @Prop()\r\n    birthDate: Date;\r\n\r\n    @Prop()\r\n    emailAddress: string;\r\n\r\n    @Prop()\r\n    phoneNumber: string;\r\n\r\n    @Prop()\r\n    password: string;\r\n\r\n    @Prop()\r\n    registerDate: Date;\r\n\r\n    @Prop()\r\n    image: string;\r\n\r\n    @Prop()\r\n    roles: Role[];\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    following: [Types.ObjectId];\r\n\r\n    @Prop({\r\n        ref: 'User'\r\n    })\r\n    followers: [Types.ObjectId];\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);","import { Body, Controller, Delete, Get, Param, Patch, Post, Req } from \"@nestjs/common\";\r\nimport { Types } from \"mongoose\";\r\nimport { Roles } from \"../auth/roles.decorator\";\r\nimport { ObjectIdPipe } from \"../shared/pipes/object.id.pipe\";\r\nimport { CreateUserDto } from \"./create-user.dto\";\r\nimport { Role } from \"./role.enum\";\r\nimport { UpdateUserDto } from \"./update-user.dto\";\r\nimport { User } from \"./user.schema\";\r\nimport { UsersService } from \"./users.service\";\r\n\r\n@Controller('user')\r\nexport class UsersController {\r\n    constructor(private readonly userService: UsersService) {}\r\n\r\n    @Get()\r\n    async getUsers(): Promise<User[]> {\r\n        return await this.userService.getUsers();\r\n    }\r\n\r\n    @Get(':id')\r\n    async getUserById(@Param('id', ObjectIdPipe) id: string): Promise<User> {\r\n        return await this.userService.getUserById(id);\r\n    }\r\n\r\n    @Get(':username')\r\n    async getUserByUsername(@Param('username') username: string): Promise<User> {\r\n        return await this.userService.getUserByUsername(username);\r\n    }\r\n\r\n    @Post(':id/follow')\r\n    async followUser(@Req() req, @Param('id', ObjectIdPipe) id: string): Promise<User[]> {\r\n        return await this.userService.followUser(req, id);\r\n    }\r\n\r\n    @Post(':id/unfollow')\r\n    async unfollowUser(@Req() req, @Param('id', ObjectIdPipe) id: string): Promise<User[]> {\r\n        return await this.userService.unfollowUser(req, id);\r\n    }\r\n\r\n    @Post()\r\n    @Roles(Role.Admin)\r\n    async createUser(@Body() createUserDto: CreateUserDto): Promise<User> {\r\n        return await this.userService.createUser(createUserDto.username, createUserDto.birthDate, createUserDto.emailAddress, createUserDto.phoneNumber, createUserDto.password, createUserDto.image);\r\n    }\r\n\r\n    @Patch(':id')\r\n    async updateUser(@Req() req, @Param('id', ObjectIdPipe) id: string, @Body() updateUserDto: UpdateUserDto): Promise<User> {\r\n        return await this.userService.updateUser(req, id, updateUserDto);\r\n    }\r\n}","import { forwardRef, Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { CommunitiesModule } from '../communities/communities.module';\r\nimport { User, UserSchema } from './user.schema';\r\nimport { UsersController } from './users.controller';\r\nimport { UsersService } from './users.service';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), forwardRef(() => CommunitiesModule)],\r\n  controllers: [UsersController],\r\n  providers: [UsersService],\r\n  exports: [UsersService]\r\n})\r\nexport class UsersModule {}","import { forwardRef, HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\r\nimport { Model, Types } from 'mongoose';\r\nimport { Role } from './role.enum';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { ValidationException } from '../shared/filters/validation.exception';\r\nimport { User, UserDocument } from './user.schema';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { CommunitiesService } from '../communities/communities.service';\r\nimport { Community, CommunityDocument } from '../communities/community.schema';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n  constructor(@InjectModel(User.name) private userModel: Model<UserDocument>, @InjectModel(Community.name) private communityModel: Model<CommunityDocument>, @Inject(forwardRef(() => CommunitiesService)) private readonly communitiesService: CommunitiesService) {}\r\n\r\n  async getUserByUsername(username: string): Promise<User | undefined> {\r\n    return this.userModel.findOne({ username: username });\r\n  }\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    //return this.userModel.find({});\r\n    return await this.userModel.aggregate([\r\n      {$lookup: {\r\n        from: \"users\",\r\n        localField: \"following\",\r\n        foreignField: \"_id\",\r\n        as: \"following\"\r\n      }},\r\n      {$lookup: {\r\n        from: \"users\",\r\n        localField: \"followers\",\r\n        foreignField: \"_id\",\r\n        as: \"followers\"\r\n      }},\r\n      {$unset: [\"password\", \"__v\"]}\r\n    ])\r\n  }\r\n\r\n  async getUserById(id: string): Promise<User> {\r\n    //return this.userModel.findOne({ _id: new Types.ObjectId(id) });\r\n    await this.existing(id);\r\n\r\n    return (await this.userModel.aggregate([\r\n      {$match: { \"_id\": new Types.ObjectId(id) }},\r\n      {$lookup: {\r\n        from: \"users\",\r\n        localField: \"following\",\r\n        foreignField: \"_id\",\r\n        as: \"following\"\r\n      }},\r\n      {$lookup: {\r\n        from: \"users\",\r\n        localField: \"followers\",\r\n        foreignField: \"_id\",\r\n        as: \"followers\"\r\n      }},\r\n      {$unset: [\"password\", \"__v\"]}\r\n    ]))[0];\r\n  }\r\n\r\n  async followUser(req, id: string): Promise<User[]> {\r\n    await this.existing(id);\r\n\r\n    const user = await this.getUserById(id);\r\n    const loggedInUser = await this.getUserById(req.user.id);\r\n\r\n    if (!(loggedInUser._id.equals(user._id))) {\r\n      if (!((await this.userModel.find({ $and: [ {_id: req.user.id}, {following: { $in : new Types.ObjectId(id)}} ] })).length > 0)) {\r\n        (loggedInUser.following as any).push(user._id);\r\n        (user.followers as any).push(loggedInUser._id);\r\n    \r\n        const loggedInUserNew = await this.userModel.findOneAndUpdate({ _id: loggedInUser._id }, loggedInUser);\r\n        const userNew = await this.userModel.findOneAndUpdate({ _id: user._id }, user);\r\n    \r\n        return [loggedInUserNew, userNew];\r\n      } else {\r\n        throw new ValidationException(['Already following this user!']);\r\n      }\r\n    } else {\r\n      throw new ValidationException(['Can not follow yourself!']);\r\n    }\r\n  }\r\n\r\n  async unfollowUser(req, id: string): Promise<User[]> {\r\n    await this.existing(id);\r\n\r\n    const user = await this.getUserById(id);\r\n    const loggedInUser = await this.getUserById(req.user.id);\r\n\r\n    if (!(loggedInUser._id.equals(user._id))) {\r\n      if (!((await this.userModel.find({ $and: [ {_id: req.user.id}, {following: { $in : new Types.ObjectId(id)}} ] })).length === 0)) {\r\n        (loggedInUser.following as any).pull(user._id);\r\n        (user.followers as any).pull(loggedInUser._id);\r\n        \r\n        const loggedInUserNew = await this.userModel.findOneAndUpdate({ _id: loggedInUser._id }, loggedInUser);\r\n        const userNew = await this.userModel.findOneAndUpdate({ _id: user._id }, user);\r\n\r\n        return [loggedInUserNew, userNew];\r\n      } else {\r\n        throw new ValidationException(['You do not follow this user!']);\r\n      }\r\n    } else {\r\n      throw new ValidationException(['Can not unfollow yourself!']);\r\n    }\r\n  }\r\n\r\n  async createUser(username: string, birthDate: Date, emailAddress: string, phoneNumber: string, password: string, image: string): Promise<User> {\r\n    password = await bcrypt.hashSync(password, 10);\r\n\r\n    birthDate = new Date(birthDate);\r\n    birthDate.setHours(birthDate.getHours() + 1);\r\n\r\n    if (birthDate > new Date()) {\r\n      throw new ValidationException([`Birthdate ${birthDate} lies in the future!`]);\r\n    }\r\n\r\n    if ((await this.getUsers()).filter(p => p.username === username).length > 0) {\r\n      throw new ValidationException([`Username ${username} already in use!`]);\r\n    }\r\n\r\n    const newUser = new this.userModel({\r\n      _id: new Types.ObjectId(),\r\n      username,\r\n      birthDate,\r\n      emailAddress,\r\n      phoneNumber,\r\n      password,\r\n      registerDate: new Date(),\r\n      image,\r\n      roles: [Role.User]\r\n    });\r\n\r\n    return this.userModel.create(newUser);\r\n  }\r\n\r\n  async updateUser(req, id: string, user: Partial<User>): Promise<User> {\r\n    await this.existing(id);\r\n\r\n    if (req.user.id.equals(new Types.ObjectId(id)) || req.user.roles.includes(Role.Admin)) {\r\n      if (user.username) {\r\n        if ((await this.getUsers()).filter(p => p.username === user.username && !(p._id.equals(new Types.ObjectId(id)))).length > 0) {\r\n          throw new ValidationException([`Username ${user.username} already in use!`]);\r\n        }\r\n      }\r\n\r\n      if (user.birthDate) {\r\n        user.birthDate = new Date(user.birthDate);\r\n        user.birthDate.setHours(user.birthDate.getHours() + 1);\r\n\r\n        if (user.birthDate > new Date()) {\r\n          throw new ValidationException([`Birthdate ${user.birthDate} lies in the future!`]);\r\n        }\r\n      }\r\n      \r\n      if (user.password) {\r\n        user.password = await bcrypt.hashSync(user.password, 10);\r\n      }\r\n\r\n      user._id = new Types.ObjectId(id);\r\n\r\n      const ownedCommunities = (await this.communitiesService.getCommunities()).filter(p => p.owner._id.equals(user._id));\r\n\r\n      ownedCommunities.forEach(async comm => {\r\n        await this.communityModel.updateOne({ _id: new Types.ObjectId(comm._id)}, { $set: { owner: {...(await this.getUserById(id)), ...user} }});\r\n      });\r\n\r\n      return this.userModel.findOneAndUpdate({ _id: new Types.ObjectId(id) }, user);\r\n    } else {\r\n      throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\r\n    }\r\n  }\r\n\r\n  async existing(userId: string): Promise<void> {\r\n    const user = await this.userModel.findOne({ _id: new Types.ObjectId(userId) });\r\n\r\n    if (!user) {\r\n      throw new ValidationException([`User with id ${userId} does not exist!`]);\r\n    }\r\n  }\r\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-validator\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger, ValidationError, ValidationPipe } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { ValidationFilter } from './app/shared/filters/validation.filter';\r\nimport { ValidationException } from './app/shared/filters/validation.exception';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'api';\r\n  app.enableCors();\r\n  app.useGlobalFilters(new ValidationFilter);\r\n  app.setGlobalPrefix(globalPrefix);\r\n  app.useGlobalPipes(new ValidationPipe({\r\n    exceptionFactory: (errors: ValidationError[]) => {\r\n      const messages = errors.map(\r\n        error => `${error.property} has wrong value ${error.value}, ${Object.values(error.constraints).join(', ')}`\r\n      )\r\n\r\n      return new ValidationException(messages);\r\n    }\r\n  }));\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}